Authentication	 Objects to manipulate data Turista Check if the string username and password If the type is Turista Invoke the method to obtain the Bean del Turista Given the username Check that the Bean is not null and Passwords match If the type and eateries Not implemented was the operational point of Refreshment If not match any known type If the data are incorrect returns -1
Banner	 This &grave; the default constructor. Setting up dell'help manager for cultural. Setting up of remote objects for the management of cultural heritage. Load data. This method initializes the toolbar to the functions of management Banner.  Return javax.swing.JToolBar - the toolbar. This method initializes the button to insert a banner.  Return javax.swing.JButton - the button for the insertion. This method initializes the delete button for a banner.  Return javax.swing.JButton - the delete button for. Create the root For each refreshment dell'arraylist calls the method get Banner. This method initializes the tree where it displays the banner.  Return javax.swing.JTree This class intercepts mouse events and then Makes the frame below blocked. Construction of the dialogif (pSelectedNode instanceof BannerNode)  Replaceelse if (pSelectedNode instanceof PRNode)  Inserting If an error displays an error message.
internalFrameOpened	 Inclusion of the frame on the desktop retrieves the bread Link to the desktop pane. Inclusion of the frame on the desktop desktop retrieves bread bread And desktop manager and initializes the remote objects Management of cultural heritage. Inclusion of the frame on the desktop desktop retrieves bread bread And desktop manager and initializes the remote objects Management of cultural heritage. Inclusion of the frame on the desktop desktop retrieves bread bread And desktop manager and initializes the remote objects for managing Cultural heritage. Inclusion of the frame on the desktop desktop retrieves bread bread And desktop manager and initializes the remote objects for managing Cultural heritage.
JPanel	 Two exceptions: RemoteException and NotBoundException. The Result is the same. The management is not operable and After the error message window closes. This method initializes the content pane.  Return javax.swing.JPanel - the content pane. This method initializes the right side panel.  Return javax.swing.JPanel - the right panel. This method initializes the panel that contains the online help.  Return javax.swing.JPanel - the panel for the guide. This method initializes the panel for the detection of points Refreshments.  Return javax.swing.JPanel - the panel for research. At the end of the frame displays the dialog Confirmation. If it is confirmed the closing of management, all Classes "daughters" are closed. Update the current model of the table of cultural property with the bean Of the cultural supplied input.  Param pbc BeanBeneCulturale - the bean with which to update the Model. Closes the tab cultural selected.  Param pScheda SchedaBC - the cultural card to close. This method initializes the content pane of the frame.  Return javax.swing.JPanel - the content pane. This method initializes the right side of the interface.  Return javax.swing.JPanel - the right pane of the interface. This method initializes the panel for finding property Cultural.  Return javax.swing.JPanel - the search panel. This method initializes the panel containing the online help.  Return javax.swing.JPanel - the panel of the guide. This method initializes the panel that realizes the interface side Right of news management.  Return javax.swing.JPanel - the right panel. This method initializes the panel's online help.  Return javax.swing.JPanel This method initializes jContentPane  Return javax.swing.JPanel This method initializes RightPanel  Return javax.swing.JPanel This method initializes CentrePanel  Return javax.swing.JPanel Name Description Location City State Number of Votes Average Ratings PosGeo private static final String [] headers = ( "Name", "Phone", "Gone", "Location", "City", "CPC", "Province", "Media Votes", "Number Votes"); This method initializes HelpPanel  Return javax.swing.JPanel This method initializes RicercaPanel  Return javax.swing.JPanel)   JVE: decl-index = 0: visual-constraint = "10.10" This method initializes jContentPane  Return javax.swing.JPanel jComboBox.addItem ( "Salerno"); This method initializes centralPanel  Return javax.swing.JPanel This method initializes southPanel  Return javax.swing.JPanel This method initializes guidainlinea  Return javax.swing.JPanel This method initializes genStat  Return javax.swing.JPanel This method initializes evdStat  Return javax.swing.JPanel This method initializes stat  Return javax.swing.JPanel This method initializes JPanel  Return javax.swing.JPanel This method initializes jPanel1  Return javax.swing.JPanel)   JVE: decl-index = 0: visual-constraint = "-7, -61"  This method initializes the format for the data of a cultural object.  Return javax.swing.JPanel - the form for the data. This method initializes the statistics of a container panel Cultural.  Return javax.swing.JPanel - the panel statistics. This method initializes the panel to display feedback Received from a cultural object.  Return javax.swing.JPanel - the panel of feedback. This method initializes the panel of statistics for the current month.  Return javax.swing.JPanel - the panel of statistics for the current month. This method initializes the panel on the total statistics The cultural property.  Return javax.swing.JPanel - the panel statistics totals. SchedaPR.java 1.0 28/05/2007 © 2007 eTour Project - Copyright by SE  SA Lab - DMI - University of Salerno Method which initializes a jContentPane  Return javax.swing.JPanel Method to initialize a panel (datiPR)  Return javax.swing.JPanel Method for iniziailizzare a panel (statistics)  Return javax.swing.JPanel Method to initialize a panel (feedback)  Return javax.swing.JPanel Initialize and create a panel (JPanel)  Return javax.swing.JPanel Create a JTable (feedbackTable)  Return javax.swing.JTable Creation of a panel (statisticheMeseCorrente)  Return javax.swing.JPanel Creation of a panel (statisticheTotali)  Return javax.swing.JPanel This method initializes the form contentente data of the tourist.  Return javax.swing.JPanel   Tourists.java     1.0     26/05/2007     © 2007 eTour Project - Copyright by SE  SA Lab - DMI - University of Salerno   This method initializes the internal frame's content pane.  Return javax.swing.JPanel - the content pane. This method initializes the form to the search for tourists.  Return javax.swing.JPanel This method initializes the panel's online help.  Return javax.swing.JPanel This method initializes the side panel of the interface.  Return javax.swing.JPanel
getBtnSostituisci	 This method initializes the button for editing a banner.  Return javax.swing.JButton - the button for the change.
createTree	 This method creates the tree starting from the information contained in the two ArrayList of bean.  Param ArrayList PPR <BeanPuntoDiRistoro> - the array of places to eat.  Param pBanner ArrayList <BeanBanner> - the array of banners associated.
getBtnRicerca	 This method initializes the button for the submission of the form Search for a refreshment.  Return javax.swing.JButton - the search button. This method initializes the button to search for a good Cultural.  Return javax.swing.JButton - the search button.
actionPerformed	 This method initializes the button to reset the fields of Search Form for a refreshment.  Return javax.swing.JButton - the Reset button. This method initializes btnStorico  Return javax.swing.JButton This method initializes the button (ToggleButton) the alteration Data for puntoDiRistoro  Return javax.swing.JToggleButton This method initializes the search button tourists.  Return javax.swing.JButton This method initializes the button to reset form Search.  Return javax.swing.JButton
OpenDialog	 This method opens the dialog box for entering a new Banner or editing a banner selected.  Param pSelectedNode DefaultMutableTreeNode - the selected node.
BannerDialog	   This class realizes the panel for the dialog for entering a   New banner or a banner for replacing selected.      Version 1.0    Author Mario Gallo     © 2007 eTour Project - Copyright by DMI SE  SA Lab --   University of Salerno   This is the default constructor. File Filter for the window to open the file.
setSelectedBanner	 This method initializes the image contained in the preview.  Param pBanner ImageIcon - an image of a banner.
getSelectedBanner	 This method returns the image contained in the preview.  Return ImageIcon - the image of the banner.
apriFileDialog	 This method opens the dialog for selecting a file from disk.  Return <ul> <li> Files - the selected file. <li> Null - if you have not selected any files. </ Ul>
BannerNode	   This class creates a node in a JTree to store   Information about a banner.      Version 1.0    Author Mario Gallo     © 2007 eTour Project - Copyright by DMI SE  SA Lab --   University of Salerno   This is the default constructor. Create a node with the image of the banner and Your id supplied as parameters.  Param pBanner Imagelcon - the image of the banner.PID   param int - the id of the banner.  Throws IllegalArgumentException - if the image provided as input is invalid.
getParent	 Returns the node type PRNode father.  Return PRNode - the parent node.
getID	 Returns the id of the banner for which information Are stored in this node.  Return int - the id of the banner. Returns the id of the point of comfort for which information Are stored in this node.  Return int - the id of refreshment.
setID	 Stores the id of the banner supplied input.  Param int PID - an ID of a banner. Stores the id of the refreshment provided input.  Param int PID - an ID of an eating place.
getBanner	 Returns the banner image.  Return ImageIcon - the image.
setBanner	 Save the image provided as input.  Param pImmagine Imagelcon - the image to be stored.  Throws IllegalArgumentException - if the supplied parameter is null.
BeanBanner	   Bean which contains data on the Banner      Author Mauro Miranda    Version 0.1 2007 eTour Project - Copyright by SE  SA Lab DMI University   Of Salerno   Parameterized constructor  Param pId  Param pPercorsoFile  Param pidPuntoDiRistoro Empty Constructor
getPercorsoFile	 Returns the value of FilePath  Return value of FilePath.
setPercorsoFile	 Sets the new value of filepath  Param pPercorsoFile New value filepath.
getId	 Returns the value of id  Return value id. Returns the value of idPuntoDiRistoro  Return value idPuntoDiRistoro. Returns the value of id  Return value id. Returns the value of id  Return value id. Returns the value of idPuntoDiRistoro  Return value idPuntoDiRistoro. Returns the value of id  Return value id. Returns the value of idPuntoDiRistoro  Return value idPuntoDiRistoro. Returns the value of id  Return value id. Returns the value of id  Return value id. Returns the value of id  Return value id. Returns the value of id  Return value id. Returns the value of idMenu  Return value idMenu. Returns the value of id  Return value id. Returns the value of id  Return value id. Returns the value of usernameTurista  Return value usernameTurista. Returns the value of id  Return value id. Returns the value of id  Return value id. Returns the value of id  Return value id. This method returns the id of the cultural property for which you are viewing the Contact or changing data.  Return int - the id of the cultural property.
setId	 Sets the new value of id  Param pId New value for id. Sets the new value of idPuntoDiRistoro  Param value pIdPuntoDiRistoro New idPuntoDiRistoro. Sets the new value of id  Param pId New value for id. Sets the new value of id  Param pId New value for id. Sets the new value of idPuntoDiRistoro  Param value pIdPuntoDiRistoro New idPuntoDiRistoro. Sets the new value of id  Param pId New value for id. Sets the new value of idPuntoDiRistoro  Param value pIdPuntoDiRistoro New idPuntoDiRistoro. Sets the new value of id  Param pId New value for id. Sets the new value of id  Param new value of id pid. Sets the new value of id  Param pId New value for id. Sets the new value of id  Param pId New value for id. Sets the new value of idMenu  Param value pIdMenu New idMenu. Sets the new value of id  Param pId New value for id. Sets the new value of id  Param pId New value for id. Sets the new value of id  Param pId New value for id. Sets the new value of id  Param pId New value for id. Sets the new value of id  Param new value of id pid.
BeanBeneCulturale	   Bean containing information relating to a cultural heritage      Author Mauro Miranda    Version 0.1 2007 eTour Project - Copyright by SE  SA Lab DMI University   Of Salerno   Parameterized constructor  Param pId  Param pNumeroVoti  Param Pnom  Param pCitta  Param pTelefono  Param pDescrizione  Param pLocalita  Param pVia  Param pcap  Param pProvincia  Param pPosizione  Param pOrarioApertura  Param pOrarioChiusura  Param pGiornoChiusura  Param pCostoBiglietto  Param pMediaVoti Empty Constructor
getGiornoChiusura	 Returns the value of giornoChiusura  Return value giornoChiusura. Returns the value of giornoChiusura  Return value giornoChiusura.
setGiornoChiusura	 Sets the new value of giornoChiusura  Param value pGiornoChiusura New giornoChiusura. Sets the new value of giornoChiusura  Param value pGiornoChiusura New giornoChiusura.
getCap	 Returns the value of cap  Return value cap. Returns the value of cap  Return value cap. Returns the value of cap  Return value cap.
setCap	 Sets the new value of capNew pcap   param value cap. Sets the new value of capNew pcap   param value cap. Sets the new value of capNew pcap   param value cap.
getCitta	 Returns the value of city  Return Value of city. Returns the value of city  Return Value of city.
setCitta	 Sets the new value of city  Param value New pCitta city. Sets the new value of city  Param value New pCitta city.
getCostoBiglietto	 Returns the value of costoBiglietto  Return value costoBiglietto.
setCostoBiglietto	 Sets the new value of costoBiglietto  Param value pCostoBiglietto New costoBiglietto.
getDescrizione	 Returns the value of description  Return value of description. Returns the value of description  Return value of description. Returns the value of description  Return value of description.
setDescrizione	 Sets the new value of description  Param pDescrizione New value of description. Sets the new value of description  Param pDescrizione New value of description. Sets the new value of description  Param pDescrizione New value of description.
getLocal	 Returns the value of location  Return locale values. Returns the value of location  Return locale values.
setLocale	 Sets the new value of location  Param pLocalita New locale values. Sets the new value of location  Param pLocalita New locale values.
getMediaVoti	 Returns the value of mediaVoti  Return value mediaVoti. Returns the value of mediaVoti  Return value mediaVoti.
setMediaVoti	 Sets the new value of mediaVoti  Param value pMediaVoti New mediaVoti. Sets the new value of mediaVoti  Param value pMediaVoti New mediaVoti.
getName	 Returns the value of name  Return value of name. Returns the value of name  Return value of name. Returns the value of name  Return value of name. Returns the value of name  Return value of name. Returns the value of name  Return value of name. Returns the value of name  Return value of name. Returns the value of name  Return value of name. Returns the value of name  Return value of name. Returns the name of the output category Return the name of refreshment.  Return String - the name of refreshment.
setNome	 Sets the new name value  Param name New value Pnom. Sets the new name value  Param name New value Pnom. Sets the new name value  Param name New value Pnom. Sets the new name value  Param name New value Pnom. Sets the new name value  Param name New value Pnom. Sets the new name value  Param name New value Pnom. Sets the new value of name  Param Phnom New value for name. Sets the new name value  Param name New value Pnom. Stores the name of the refreshment provided input.Pnom   param String - the name of a refreshment.  Throws IllegalArgumentException - if the name provided as input is invalid.
getNumeroVoti	 Returns the value of numeroVoti  Return value numeroVoti. Returns the value of numeroVoti  Return value numeroVoti.
setNumeroVoti	 Sets the new value of numeroVoti  Param value pNumeroVoti New numeroVoti. Sets the new value of numeroVoti  Param value pNumeroVoti New numeroVoti.
getOrarioApertura	 Returns the value of orarioApertura  Return value orarioApertura. Returns the value of orarioApertura  Return value orarioApertura.
setOrarioApertura	 Sets the new value of orarioApertura  Param value pString New orarioApertura. Sets the new value of orarioApertura  Param value pOrarioApertura New orarioApertura.
getOrarioChiusura	 Returns the value of orarioChiusura  Return value orarioChiusura. Returns the value of orarioChiusura  Return value orarioChiusura.
setOrarioChiusura	 Sets the new value of orarioChiusura  Param value pOrarioChiusura New orarioChiusura. Sets the new value of orarioChiusura  Param value pOrarioChiusura New orarioChiusura.
getPosizione	 Returns the value of position  Return value of position. Returns the value of position  Return value of position.
setPosizione	 Sets the new position value  Param pPosizione New position value. Sets the new position value  Param pPosizione New position value.
getProvincia	 Returns the value of the province  Return value of the province. Returns the value of the province  Return value of the province. Returns the value of the province  Return value of the province.
setProvincia	 Sets the new value of the province  Param pProvincia New value for the province. Sets the new value of the province  Param pProvincia New value for the province. Sets the new value of the province  Param pProvincia New value for the province.
getTelefono	 Returns the value of telephone  Return Value of the phone. Returns the value of telephone  Return Value of the phone. Returns the value of telephone  Return Value of the phone.
setTelefono	 Sets the new value of telephone  Param value New pTelefono phone. Sets the new value of telephone  Param value New pTelefono phone. Sets the new value of telephone  Param value New pTelefono phone.
getVar	 Returns the value of street  Return value on. Returns the value of street  Return value on. Returns the value of street  Return value on.
setvar	 Sets the new value via  Param value New pVia on. Sets the new value via  Param value New pVia on. Sets the new value via  Param value New pVia on.
BeanConvenzione	   Bean containing information relating to a Convention      Author Joseph Martone    Version 0.1 2007 eTour Project - Copyright by SE  SA Lab DMI University   Of Salerno   Parameterized constructor  Param pId  Param pMaxBanner  Param pDataInizio  Param pDataFine  Param pPrezzo  Param pacts  Param pidPuntoDiRistoro Empty Constructor
isAttiva	 Returns the value of active  Return value of assets.Returns to be 1 or 0, indicating whether a tourist or not Active  Return value of activation
setAttiva	 Sets the new value of active  Param new value terms of assets. Sets the new value of active  Param new value terms of assets.
getDataFine	 Returns the value of EndDate  Return Value EndDate.
setDataFine	 Sets the new value for EndDate  Param pDataFine New value for EndDate.
getDataInizio	 Returns the value of StartDate  Return value StartDate.
setDataInizio	 Sets the new value of StartDate  Param new value pDataInizio StartDate.
getMaxBanner	 Returns the value of maxBanner  Return value maxBanner.
setMaxBanner	 Sets the new value of maxBanner  Param value pMaxBanner New maxBanner.
getPrezzo	 Returns the value of money  Return value price. Returns the value of money  Return value price.
setPrezzo	 Sets the new value of money  Param pPrezzo New value for money. Sets the new value of money  Param pPrezzo New value for money.
BeanMenu	   Bean containing information relating to a Menu      Author Joseph Martone    Version 0.1 2007 eTour Project - Copyright by SE  SA Lab DMI University   Of Salerno   Parameterized constructor  Param pId  Param pGiorno  Param pIdPuntoDiRistoro Empty Constructor
getGiorno	 Returns the value of days  Return Value of the day.
setGiorno	 Sets the new value of days  Param value New pGiorno day.
BeanNews	   Bean containing information relating to the News      Author Mauro Miranda    Version 0.1 2007 eTour Project - Copyright by SE  SA Lab DMI University   Of Salerno   Parameterized constructor  Param Pnews  Param pDataPubblicazione  Param pDataScadenza  Param pPriorita  Param pId Empty Constructor
getDataPubblicazione	 Returns the value of dataPubblicazione  Return value dataPubblicazione.
setDataPubblicazione	 Sets the new value of dataPubblicazione  Param value pDataPubblicazione New dataPubblicazione.
getDataScadenza	 Returns the value of dataScadenza  Return value dataScadenza.
setDataScadenza	 Sets the new value of dataScadenza  Param value pDataScadenza New dataScadenza.
getNews	 Returns the value of news  Return value of news.
setNews	 Sets the new value of news  Param value New Pnews news.
getPriorita	 Returns the priority value  Return the priority value.
setPriorita	 Set the new priority value  Param pPriorita New priority value.
BeanOperatoreAgenzia	   Bean containing information relating to an Agency Operator      Author Joseph Martone    Version 0.1 2007 eTour Project - Copyright by SE  SA Lab DMI University   Of Salerno   Parameterized constructor  Param pid  Param pUsername  Param Pnom  Param pCognome  Param pPassword Empty Constructor
getCognome	 Returns the value of name  Return value of name. Returns the value of name  Return value of name. Returns the value of name  Return value of name.
setCognome	 Sets the new value of name  Param value New pCognome surname. Sets the new value of name  Param value New pCognome surname. Sets the new value of name  Param value New pCognome surname.
getPassword	 Returns the value of password  Return value of password. Returns the value of password  Return value of password. Returns the value of password  Return value of password.
setPassword	 Sets the new password value  Param pPassword new password value. Sets the new password value  Param pPassword new password value. Sets the new password value  Param pPassword new password value.
GetUserName	 Returns the value of username  Return value of username. Returns the value of username  Return value of username. Returns the value of username  Return value of username.
setUsername	 Sets the new value of username  Param pUsername New value for username. Sets the new value of username  Param pUsername New value for username. Sets the new value of username  Param pUsername New value for username.
BeanOperatorePuntoDiRistoro	   Bean containing information relating to food      Author Joseph Martone    Version 0.1 2007 eTour Project - Copyright by SE  SA Lab DMI University   Of Salerno   Parameterized constructor  Param pId  Param Pnom  Param pCognome  Param pUsername  Param pPassword  Param pEmail  Param pIdPuntoDiRistoro Empty Constructor
getEmail	 Returns the value of email  Return value of email. Returns the value of email  Return value of email.
setEmail	 Sets the new value of email  Param pEmail New value of email. Sets the new value of email  Param pEmail New value of email.
getIdPuntoDiRistoro	 Returns the value of idPuntoDiRistoro  Return value idPuntoDiRistoro. Returns the value of idPuntoDiRistoro  Return value idPuntoDiRistoro.
setIdPuntoDiRistoro	 Sets the new value of idPuntoDiRistoro  Param value pIdPuntoDiRistoro New idPuntoDiRistoro. Sets the new value of idPuntoDiRistoro  Param value pIdPuntoDiRistoro New idPuntoDiRistoro.
BeanPiatto	   Bean containing information relating to food      Author Joseph Martone    Version 0.1 2007 eTour Project - Copyright by SE  SA Lab DMI University   Of Salerno   Parameterized constructor  Param pId  Param Pnom  Param pPrezzo  Param pIdMenu Empty Constructor
BeanPreferenzaDiRicerca	   Bean which contains data search preferences      Author Joseph Martone    Version 0.1 2007 eTour Project - Copyright by SE  SA Lab DMI University   Of Salerno   Parameterized constructor  Param pId  Param Pnom Empty Constructor
BeanPreferenzeGeneriche	   Bean containing information relating to the General Preferences      Author Mauro Miranda    Version 0.1 2007 eTour Project - Copyright by SE  SA Lab DMI University   Of Salerno   Parameterized constructor  Param pId  Param pDimensioneFont  Param pFont  Param pTema  Param pIdTurista Empty Constructor
getDimensioneFont	 Returns the value of dimensioneFont  Return value dimensioneFont.
setDimensioneFont	 Sets the new value of dimensioneFont  Param value pDimensioneFont New dimensioneFont.
getFont	 Returns the value of font  Return Value of fonts.
setFont	 Sets the new value of fontNew value   param pFont font.
getTema	 Returns the value of the subject  Return value issue.
September	 Sets the new value of the subject  Param value New pTema theme.
setIdTurista	 Sets the new value of usernameTurista  Param value pIdTurista New usernameTurista. Sets the new value of IdTurista  Param value pIdTurista New IdTurista. Sets the new value of IdTurista  Param value pIdTurista New IdTurista.
BeanPuntoDiRistoro	   Bean for the storage of data refreshment      Author Joseph Martone    Version 0.1 2007 eTour Project - Copyright by SE  SA Lab DMI University   Of Salerno   Parameterized constructor  Param pId  Param pNumeroVoti  Param pMediaVoti  Param Pnom  Param pDescrizione  Param pTelefono  Param pLocalita  Param pCitta  Param pVia  Param pcap  Param pProvincia  Param pPartitaIva  Param pPosizione  Param pOrarioApertura  Param pOrarioChiusura  Param pGiornoChiusura Empty Constructor
getPartitaIva	 Returns the value of PartitaIva  Return value of a political party.
setPartitaIva	 Sets the new value of PartitaIva  Param pPartitaIva New value of political parties.
BeanTag	   Bean that contains the data for a Tag      Author Mauro Miranda    Version 0.1 2007 eTour Project - Copyright by SE  SA Lab DMI University   Of Salerno   Parameterized constructor  Param pId  Param Pnom  Param pDescrizione Empty Constructor
BeanTurista	   Bean containing information relating to a tourist      Author Mauro Miranda    Version 0.1 2007 eTour Project - Copyright by SE  SA Lab DMI University   Of Salerno   Parameterized constructor  Param pid  Param pUsername  Param Pnom  Param pCognome  Param pCittaNascita  Param pCittaResidenza  Param pTelefono  Param pcap  Param pVia  Param pProvincia  Param pEmail  Param pPassword  Param pDataNascita  Param pDataRegistrazione  Param pacts Empty Constructor ArrayList <BeanTurista> t = new ArrayList <BeanTurista> (0); T.add (New BeanTurista (1, "username", "Astrubale", "Silberschatz", "Naples", "Naples", "0111111", "80100th", "Way of the systems, 1", "NA" , "Trapanosolitario.it", "passwordsolomia", new Date (), new Date (), true)); T.add (new BeanTurista (1, "username", "Astrubale", "Silberschatz", "Naples", "Naples", "0111111", "80100th", "Way of the systems, 1", "NA" , "Trapanosolitario.it", "passwordsolomia", new Date (), new Date (), true)); Return t;
getCittaNascita	 Returns the value of cittaNascita  Return value cittaNascita.
setCittaNascita	 Sets the new value of cittaNascita  Param value pCittaNascita New cittaNascita.
getCittaResidenza	 Returns the value of cittaResidenza  Return value cittaResidenza.
setCittaResidenza	 Sets the new value of cittaResidenza  Param value pCittaResidenza New cittaResidenza.
getDataNascita	 Returns the value of dob  Return value dob.
setDataNascita	 Sets the new value of dob  Param value New pDataNascita dob.
getDataRegistrazione	 Returns the value of dataRegistrazione  Return value dataRegistrazione.
setDataRegistrazione	 Sets the new value of dataRegistrazione  Param value pDataRegistrazione New dataRegistrazione.
BeanVisitaBC	   Bean containing information relating to the feedback of a cultural      Author Joseph Martone    Version 0.1 2007 eTour Project - Copyright by SE  SA Lab DMI University   Of Salerno   Parameterized constructor  Param pVoto  Param pIdBeneCulturale  Param pCommento  Param pIdTurista  Param pDataVisita Empty Constructor
getCommento	 Returns the value of comment  Return value of comment. Returns the value of comment  Return value of comment.
setCommento	 Sets the new value of comment  Param value New pCommento comment. Sets the new value of comment  Param value New pCommento comment.
getDataVisita	 Returns the value of dataVisita  Return value dataVisita. Returns the value of dataVisita  Return value dataVisita.
setDataVisita	 Sets the new value of dataVisita  Param value pDataVisita New dataVisita. Sets the new value of dataVisita  Param value pDataVisita New dataVisita.
getIdBeneCulturale	 Returns the value of idBeneCulturale  Return value idBeneCulturale.
setIdBeneCulturale	 Sets the new value of idBeneCulturale  Param value pIdBeneCulturale New idBeneCulturale.
getIdTurista	 Returns the value of IdTurista  Return value IdTurista. Returns the value of IdTurista  Return value IdTurista.
getVoto	 Returns the value of voting  Return value of vote. Returns the value of voting  Return value of vote.
setVoto	 Sets the new value of votingNew value   param pVoto to vote. Sets the new value of votingNew value   param pVoto to vote.
BeanVisitaPR	   Bean that contains the data for feedback to a refreshment      Author Joseph Martone    Version 0.1 2007 eTour Project - Copyright by SE  SA Lab DMI University   Of Salerno   Parameterized constructor  Param pVoto  Param pIdPuntoDiRistoro  Param pCommento  Param pIdTurista  Param pDataVisita Empty Constructor
Beniculturali	   Class that implements the interface for the management of cultural side   Operator Agency.      Author Mario Gallo    Version 0.8   © 2007 eTour Project - Copyright by DMI SE  SA Lab --   University of Salerno   This is the default constructor. Setting up dell'help manager for cultural. Setting up objects for remote asset management Cultural. Load data. Create the confirmation dialog. Opens a form for entering a new good Cultural. Open the card with the change of the cultural Disabled. Open the card with the change of the cultural Enabled. Create the delete confirmation dialog. If the deletion is confirmed, remove the well Cultural selected. Top - Left - Bottom - Right If an error displays an error message. If an error panel tag remains blank. Name Address Phone Location City CAP Test RATINGS POSGEO
ImageIcon	 Two exceptions: RemoteException and NotBoundException. The Result is the same. The management is not operable and After the error message window closes. This method initializes the button to insert a new good Cultural.  Return javax.swing.JButton - the button for the insertion. This method initializes the button to access the modification of a Cultural.  Return javax.swing.JButton - the button for the card. This method initializes the button to clear the form Cultural research.  Return javax.swing.JButton - the button to reset the form. Two exceptions: RemoteException and NotBoundException. The Result is the same. The management is not operable and After the error message window closes. This method initializes the button to clear the form or Cancel editing actions on a selected news.  Return javax.swing.JButton - the button above. This method resets the form fields. This method initializes the button to modify data of good Cultural.  Return javax.swing.JToggleButton - the button for the change.
getBtnSchedaBC	 This method initializes the toolbar for features on Management of cultural heritage.  Return javax.swing.JToolBar - the toolbar for managing assets Cultural. This method initializes the button to access to details of property Cultural selected.  Return javax.swing.JButton - the button for the card.
getBtnEliminaBC	 This method initializes the button for the elimination of property Cultural selected.  Return javax.swing.JButton - the delete button for.
ValueChanged	 This method initializes the bread and table scroll of cultural heritage.  Return javax.swing.JScrollPane - the scrollPane. SelectionListener - if a selected row, the buttons Tab, edit and delete are active. Otherwise, are Disabled.
keyPressed	 KeyListener <ENTER> - Details of the cultural selected. <Backspace> - Delete the selected cultural. <space> -- Modify the cultural selected.
Gaim	 This method opens a tab of the selected cultural or opens the Window for entering a new cultural object.  Param pbc BeanBeneCulturale - the bean of the cultural property of which Want to see the card.  Param boolean pModifica -- <ul> <li> <i> True </ i> - indicates that you are making a change Data cultural. <li> <i> False </ i> indicates that you are viewing the card The cultural property. This method opens a tab for the bean tourists supplied input.  Param pTurista BeanTurista - the bean tourists  Param boolean pModifica <ul> <li> true - if you change the data.<li>  False - if you receive the card. </ Ul>  Return void
caricaTabella	 This method imports the cultural downloaded from the server in Table.  Param boolean pRicerca <ul> <li> <i> True </ i> - include the search parameters. <li> <i> False </ i> otherwise. </ Ul>
caricaTags	 This method loads the tags available in the system and import them into Panel tag.
organizzaRiga	 This method sets the size of columns for the data assets Cultural.
Hashtable	 Class that describes the characteristics of a Category Contains a Hashtable that represents the dictionary on The category that contains and for each term associated In the category values of frequency, distance and relevance. Provides methods to access, modify and auxiliary methods.private String name;  name of the categoryprivate Hashtable <string, float[]> terms,  list of terms and their frequencies and distance rilavanza Returns the output Hashtable containing the terms With the respective values of frequency, relevance and distance Keeps track of data in each categoryprivate Hashtable <string, Categoria> categories,  hash table that keeps For each category a Class categoryprivate Hashtable <string, float[]> totTermini  hash table that keeps The terms of all CategoriesmaxDist float,  contains the maximum distances Access method to the table of categories  Return categories Method of accessing the table of total time  Return totTerminiif (esisteCategoria (pNomeCategoria))  if there is the appropriate categoryreturn categorie.get (pNomeCategoria)  returns the Assciato to pNomeCategoriareturn null,  otherwise nullif (esisteTermine (pTermine))  if the term is present in tebella Terms of totalreturn (float []) totTermini.get (pTermine)  return the vaolre Associatereturn null,  null otherwiseif (! esisteCategoria (pNomeCategoria))  if the category existsreturn false;  returns falsecategorie.put (pNomeCategoria, pCategoria),  otherwise load the Category in the tablereturn true;  returns trueif (esisteCategoria (pNomeCategoria))  if the category does not existreturn false;  returns falsecategorie.put (pNomeCategoria, pCategoria)  update the table of Catogoriereturn true;  returns true N Times Where N is The Number By Categories Current In Table A categorycategorie.get (PKEY),  try to extract the category name PKEY The table of categoriesreturn true;  if the transaction does not raise exceptions category Exists and returns truereturn false;  false otherwise see esisteCategoria
Category	 Manufacturer: Get the category name as a parameter to create Method to access a category in the table of Categories  Param pNomeCategoria  Return object categories representing the category name PNomeCategoria
getval	 Get the string as a parameter representing the term Of which you want to pick the values of frequency, range and bearing
addTermine	 Agiunge an end to dizinario category Agiunge an end to dizinario category Seven also the values of frequency, distance and rilavanza
setValTermine	 Set the values for the period pTermine
esisteTermine	 Returns True if the term is present in Dictionary of Category False otherwise
ControlloBeniCulturali	   This class has the task of checking the data of a cultural object.   Various consistency checks are performed, such as length of strings,   Null reference, dynamic types incorrect.      Author Michelangelo De Simone    Version 0.1     © 2007 eTour Project - Copyright by DMI SE  SA Lab - University of Salerno   This method checks the input parameter in the cases Null reference or dynamic Wrong This method checks if the ID passed as a parameter BeanBeneCulturale Is valid or not This method checks the objects contained in BeanBeneCulturale Date As such, a check is made null and reference checks On the dynamic. This method checks all the fields in BeanBeneCulturale, research Any null references Check the correct length of string, in this case the CAP must To force of circumstances than five digits, while the province of two. TODO: To be completed
ControlloDati	   Class for managing the control of the correctness of the strings      Author Joseph Penna    Version 0.1 © 2007 eTour Project - Copyright by DMI SE  SA Lab --   University of Salerno   Check the length of the string Check the presence of the necessary characters in the string Create the string containing all characters allowed Loop for the inspection of the characters of the string to check Condition: If the character you are watching is not In the string of characters allowed The string is incorrect and out of the loop. Still I have no idea how I will spend the timePNews.getDataPubblicazione Date dataPubb = ()  Date of PublishingDate dataScad = pNews.getDataScadenza ()  Due DatePNews.getNews String news = (),  Text of News
controllaStringa	 Static method for verifying correctness of a string  Param string to check pStringa  Param letterePermesse Boolean: True if it is allowed to be present Letters in the string, False otherwise  Param numeriPermessi Boolean: True if it is allowed to be present Numbers in the string, False otherwiseCaratteriPermessi   param string containing all characters Allowed in the string  Param string contentente all caratteriNecessari characters Must be present in the string  Param numeroCaratteriMin integer representing the minimum number of Characters allowed in string  Param numeroCaratteriMax integer representing the maximum number of Characters allowed in string  Return Boolean: True if the witch meets the conditions, False Otherwise
checkBeanBanner	 Please formal control and consistency on the data of the banner Content in the bean passed by parameter.  Author Fabio Palladino  Param pBanner bean contains the data of the banner.  Return True if the data of the banner is correct false otherwise.
checkImmagine	 Method which controls the image contained in the object ImageIcon past Per parameter.  Author Fabio Palladino  Param image ImageIcon object containing the image to be checked  Return true if the image contained in the object is an instance ImageIcon Class BufferedImage.
checkBeanNews	 Function that checks the data in a news;  Author Fabio Palladino  Param bean Pnews containing details of a news.  Return Check the validity of the general method parameter  Checking the invalidity of the fields  Check the consistency of the dates  Check that the text is not empty  Check that the ID is greater than 0  Check the priority value 
ControlloDatiAdvertisement	﻿   Class that contains static methods that perform   Consistency checks on the data bean banner   And news.      Author Fabio Palladino    Version 0.1     © 2007 eTour Project - Copyright by DMI SE  SA Lab - University of Salerno  Date dataPubb = pNews.getDataPubblicazione ()  ReleasedDate dataScad = pNews.getDataScadenza ()  Due DatePNews.getNews String news = (),  Text of News
controlloBanner	 Please formal control and consistency on Data content of the banner in the bean passed by parameter.  Param pBanner bean contains the data of the banner.  Return
controlloNews	 Method that performs consistency checks and Correctness of the information contained in the bean past Per parameter, in particular check that the dates Publication and expiration of the news are consistent, Or that the second is the later.  Param Pnews bean containing data news  Return Returns true if the bean contains consistent data Check the validity of the general method parameter  Checking the invalidity of the fields  Check the consistency of the dates  Check that the text is not empty  Check that the ID is greater than 0  Check the priority value 
ControlloVisiteBeniCulturali	   This class has the task of monitoring data from a cultural visit.   Various consistency checks are performed, such as length of strings,   Null reference, dynamic types incorrect.      Author Michelangelo De Simone    Version 0.1     © 2007 eTour Project - Copyright by DMI SE  SA Lab - University of Salerno   If the bean is null Check the ID of a cultural visit And the id of its tourist Check the vote (of course ratings are accepted only between 1 and 5 Check for null references in the bean Check the correct length of string Check the nullity of the fields of feedback
controllaDatiVisitaBeneCulturale	 Please consistency check by calling the appropriate methods  Param bean The pVBC cultural visit to check  Return boolean The result of the check: true if OK, false otherwise
controllaDatiNulli	 Check for null data in a bean cultural visit  Param bean The PBC cultural visit to check  Return boolean The result of the check: true if there are no null references, false otherwise
ControlServerLauncher	   This is the entry point of the control server. This class is responsible for   Make the deployment of services on the RMI registry, thus rendering the   Some services are available and usable.      Author Michelangelo De Simone    Version 0.1 © 2007 eTour Project - Copyright by DMI SE  SA Lab - University of Salerno  /  WARNING   WARNING  EXPERIMENTAL EXPERIMENTAL GestioneBeniCulturaliComune is the class that implements the interface IGestioneBeniCulturaliComune, This interface on both the client, both the server Here you create the stub for the registry, making it clear to the RMI system you are exporting the object on a gBCC Anonymous port There shall call the register (default is on localhost) and "bind" (alloy)
main	 Entry point of ControlServer  Param args The command line parameters
CostantiGlobali	   Class that contains the constants of the environmental system.      Author Fabio Palladino    Version 0.1     © 2007 eTour Project - Copyright by DMI SE  SA Lab - University of Salerno   Highest precedence of news.  Priority least one news.  Maximum number of news on the machine.  URL of the server for RMI calls  Milliseconds of 30 days 
ArrayList	   Stubs for dynamic class DBBanner. Is used for testing   Class package GestioneAdvertisement.      Author Fabio Palladino    Version 0.1     © 2007 eTour Project - Copyright by DMI SE  SA Lab - University of Salerno   (Non-Javadoc)  See unisa.gps.etour.repository.IDBBanner # ottieniBanner (int) Must return an ArrayList with 3 elements  TODO Auto-generated method stub TODO Auto-generated method stub TODO Auto-generated method stub TODO Auto-generated method stub  Attribute_Definition      Author Fabio Palladino    Version 0.1     © 2007 eTour Project - Copyright by DMI SE  SA Lab - University of Salerno   TODO Auto-generated method stub (Non-Javadoc)  See unisa.gps.etour.repository.IDBConvenzione # getStoricoConvenzione (int) TODO Auto-generated method stub TODO Auto-generated method stub TODO Auto-generated method stub (Non-Javadoc)  See unisa.gps.etour.repository.IDBConvenzione # ottieniListaConvenzioneAttivaPR () TODO Auto-generated method stub Empty constructor Variables for database connection Variable for the query Get the connection Create the Statement Query cancellation You run the query Cancellation This returns the backup Is always done and takes care of closing the Statement and the Connect Variables for database connection Variable for the query Get the connection Create the Statement Query for the insertion You run the insert query This returns the backup Always runs and takes care of closing the Statement and the Connect Variables for database connection Variable for the query Get the connection Create the Statement Query for amendment You run the query for Change This returns the backup Is always done and takes care of closing the Statement and the Connect Variables for database connection Variable for the query Variable for the query results Get the connection Create the Statement Query to extract the list of Menu The query is executed List that will contain all BeanMenu obtained We extract the results from the result set and moves in List To be returned Fill the list Return the list Is always done and takes care to close the Result, the Statement And Connection Variables for database connection Variable for the query Variable for the query results Get the connection Create the Statement Query for the extraction of Daily Menu The query is executed Get the bean of the daily menu based on the ID of the point of Dining and a day Create the proceeds Bean Return the Bean obtained Is always done and takes care to close the Result, the Statement And Connection   Stubs used for testing the class GestioneAdvertisementAgenzia      Author Fabio Palladino    Version 0.1     © 2007 eTour Project - Copyright by DMI SE  SA Lab - University of Salerno   (Non-Javadoc)  See unisa.gps.etour.repository.IDBNews # ottieniNews () Empty constructor Variables for database connection Variable for the query Get the connection Create the Statement Query cancellation You run the query Cancellation This returns the backup Always runs and takes care of closing the Statement and the Connect Variables for database connection Variable for the query Get the connection Create the Statement Query for the insertion You run the insert query This returns the backup Always runs and takes care of closing the Statement and the Connect Variables for database connection Variable for the query Get the connection Create the Statement Query for amendment You run the query for Change This returns the backup Always runs and takes care of closing the Statement and the Connect Variables for database connection Variable for the query Variable for the query results Get the connection Create the Statement Query to extract the list of dishes given the id of the Menu The query is executed List that contains all the plates obtained We extract the results from the result set and moves in List To be returned Add the list BeanPiatto Always runs and takes care to close the Result, the Statement And Connection Empty constructor Variables for database connection Variable for the query Get the connection Create the Statement Query cancellation You run the query Cancellation This returns the backup Always runs and takes care of closing the Statement and the Connect Variables for database connection Variable for the query Get the connection Create the Statement Query cancellation You run the query Cancellation This returns the backup Always runs and takes care of closing the Statement and the Connect Variables for database connection Variable for the query Get the connection Create the Statement Query cancellation You run the query Cancellation This returns the backup Always runs and takes care of closing the Statement and the Connect Variables for database connection Variable for the query Get the connection Create the Statement Query cancellation You run the query Cancellation This returns the backup Always runs and takes care of closing the Statement and the Connect Variables for database connection Variable for the query Get the connection Create the Statement Query for the insertion You run the insert query This returns the backup Always runs and takes care of closing the Statement and the Connect Variables for database connection Variable for the query Get the connection Create the Statement Query for the insertion You run the insert query This returns the backup Always runs and takes care of closing the Statement and the Connect Variables for database connection Variable for the query Get the connection Create the Statement Query for the insertion You run the insert query This returns the backup Always runs and takes care of closing the Statement and the Connect Variables for database connection Variable for the query Get the connection Create the Statement Query for the insertion You run the insert query This returns the backup Always runs and takes care of closing the Statement and the Connect Variables for database connection Variable for the query Variable for the query results Get the connection Create the Statement Query to extract the list of search preferences A cultural The query is executed List that will contain the BeanPreferenzaDiRicerca We extract the results from the result set and moves in List To be returned Add to the list BeanPreferenzaDiRicerca Always runs and takes care to close the Result, the Statement And Connection Variables for database connection Variable for the query Variable for the query results Get the connection Create the Statement Query to extract the list of search preferences A refreshment The query is executed List that will contain the BeanPreferenzaDiRicerca We extract the results from the result set and moves in List To be returned Add to the list BeanPreferenzaDiRicerca Always runs and takes care to close the Result, the Statement And Connection Variables for database connection Variable for the query Variable for the query results Get the connection Create the Statement Query to extract the list of search preferences A Turista The query is executed List that will contain the BeanPreferenzaDiRicerca We extract the results from the result set and moves in List To be returned Add to the list BeanPreferenzaDiRicerca Always runs and takes care to close the Result, the Statement And Connection Variables for database connection Variable for the query Variable for the query results Get the connection Create the Statement Query to extract the list of search preferences A Turista The query is executed List that will contain the BeanPreferenzaDiRicerca We extract the results from the result set and moves in List To be returned Add to the list BeanPreferenzaDiRicerca Return the list of search preferences in the DB Always runs and takes care to close the Result, the Statement And Connection Empty constructor Variable for the connection Variable for the query Variable for the query results Get the connection Create the Statement Query for the extraction of location between the PR and BC The query is executed We extract the results from the result set and moves in List To be returned List that includes the results obtained Add to the list the locations obtained Always runs and takes care to close the Result, the Statement And Connection Variable for the connection Variable for the query Variable for the query results Get the connection Create the Statement Query to extract the average of the votes of catering outlets According to a Passo The query is executed We extract the results from the result set Query to extract the average of the votes of cultural According to a Passo The query is executed We extract the results from the result set It returns the average of the refreshment and heritage Always runs and takes care to close the Result, the Statement And Connection TODO Auto-generated method stub TODO Auto-generated method stub TODO Auto-generated method stub TODO Auto-generated method stub TODO Auto-generated method stub FinteVisite.add (new BeanVisitaBC (5, 1, "This show is not 'evil', 1, new Date (new Date (). GetTime () - (unisa.gps.etour.util.CostantiGlobali.TRENTA_GIORNI  1 )))); FinteVisite.add (new BeanVisitaBC (1, 1, "E 'nice but you pay so much!", 2, new Date (106, 0, 23))); FinteVisite.add (new BeanVisitaBC (3, 1, "The food is pretty good!", 1, new Date (106, 3, 23))); FinteVisite.add (new BeanVisitaBC (4, 1, "We eat very well!", 2, new Date (107, 4, 4))); FinteVisite.add (new BeanVisitaBC (1, 1, "We eat!", 3, new Date (107, 5, 24))); FinteVisite.add (new BeanVisitaBC (5, 1, "Beautiful place", 4, new Date (107, 4, 25))); FinteVisite.add (new BeanVisitaBC (4, 1, "Excellent views of the sea", 5, new Date (107, 4, 25))); FinteVisite.add (new BeanVisitaBC (3, 1, "Bell", 6, new Date (107, 4, 25))); FinteVisite.add (new BeanVisitaBC (3, 1, "I think it's a bad place", 7, new Date (107, 4, 26))); FinteVisite.add (new BeanVisitaBC (3, 1, "W open air", 8, new Date (107, 4, 27))); FinteVisite.add (new BeanVisitaBC (5, 1, "better than others", 9, new Date (107, 5, 2))); FinteVisite.add (new BeanVisitaBC (3, 1, "Forza Napoli", 10, new Date (107, 5, 8))); FinteVisite.add (new BeanVisitaBC (4, 1, "The food is pretty good!", 11, new Date (107, 5, 9))); FinteVisite.add (new BeanVisitaBC (5, 1, "We eat very well!", 12, new Date (107, 5, 11))); FinteVisite.add (new BeanVisitaBC (4, 1, "very good", 13, new Date (107, 5, 12))); FinteVisite.add (new BeanVisitaBC (5, 1, "very good", 14, new Date (107, 5, 13))); FinteVisite.add (new BeanVisitaBC (5, 1, "I was really good", 15, new Date (107, 5, 13))); FinteVisite.add (new BeanVisitaBC (4, 1, "good place", 16, new Date (107, 5, 14))); FinteVisite.add (new BeanVisitaBC (3, 1, "I guess I'm not going back", 17, new Date (107, 5, 23))); FinteVisite.add (new BeanVisitaBC (3, 1, "I think there is better", 18, new Date (107, 5, 24))); FinteVisite.add (new BeanVisitaBC (2, 1, "sucks", 19, new Date (107, 5, 24))); FinteVisite.add (new BeanVisitaBC (5, 1, "Too beautiful", 20, new Date (107, 5, 25))); Empty constructor Variable for the connection Variable for the query Variable for the query results Create the date of visit Get the connection Create the Statement Query to get the average rating of a property Variable for the average rating Variable for the number of votes Query for the insertion You run the insert query This returns the backup Always runs and takes care to close the Result, the Statement And Connection Variable for the connection Variable for the query Create the date of visit Get the connection Create the Statement Query for amendment You run the query for Change This returns the backup Always runs and takes care to close the Result, the Statement And Connection Variable for the connection Variable for the query Variable for the query results Get the connection Create the Statement Query to extract the list of requests for a Refreshment The query is executed We extract the results from the result set and moves in List To be returned Always runs and takes care to close the Result, the Statement And Connection Variable for the connection Variable for the query Variable for the query results Get the connection Create the Statement Query to extract the list of requests for a Eating place for tourists The query is executed List that will contain the BeanVisitaPR We extract the results from the result set and moves in List To be returned Add to the list BeanVisitaPR Return the list Always runs and takes care to close the Result, the Statement And Connection Variable for the connection Variable for the query Variable for the query results Get the connection Create the Statement Query for the extraction of the visit made by a tourist to A given point of comfort The query is executed Get the bean's visit sought based on the ID of the tourist and Of refreshment Create the BeanVisitaPR Return the BeanTemp Always runs and takes care to close the Result, the Statement And Connection Method that returns an array containing all the news stored in the system. Use the method ( link unisa.gps.etour.repository.IDBNews # ottieniNews ()).  Return ArrayList containing beans of news.  Throws RemoteException Implements the method for obtaining all the tags of a cultural object.  See unisa.gps.etour.control.GestioneBeniCulturali.IGestioneBeniCulturaliComune # ottieniTagBeneCulturale (int) Implements the method to obtain statistics about a cultural past Through Id  See unisa.gps.etour.control.GestioneBeniCulturali.IGestioneBeniCulturaliComune # ottieniStatisticheBeneCulturale (int) Instance for database connections Connect to the Database Note: no longer 'cause SQLException thrown Changes to the layer DB; changed Exception Check identifier passed Return Instance Revenue data through the instance of the database connection Exception in database operations Unexpected exceptions due to other factors Check the variable return, so they do not pass bad data To the caller And triggers an exception if the format of the bean Return the bean that contains information about Refreshment Required Method that returns an ArrayList containing the tag identification of a Some Refreshment Check identifier passed Return Instance Revenue data through the instance of the database connection Exception in operations on database Unexpected exceptions due to other factors Check the variable return, so they do not pass bad data To the caller And triggers an exception if the format of the bean Return the ArrayList containing beans tag of refreshment Passed as parameter Returns an array of 10 strings containing the last 10 comments Issued by tourists for Refreshment passed as parameter Check the validity identifier passed String that contains only the last 10 comments made ArrayList temporary then save the comments contained in the beans Inside Attempt to retrieve information from the database via The connection instance Exception in database operations Unexpected exceptions due to other factors The bean that I receive from the database are already sorted by date Implicitly, so there is no need for sorting algorithms Insert the text of the comments in cyclically Array E 'unnecessary control the format of the array Then return the array directly with comments Method that returns an ArrayList containing the number of votes Release from 1 to 5 for The Refreshment passed as parameter. The method inserts in order Counters in positions From 0 to 1 vote, 1 vote for 2, etc. .. Check the validity identifier passed ArrayList that allows me to store the bean containing the feedback ArrayList that allows me to store the counters And then return to the calling method Initialize the array of counters Data useful to verify that the issued date back thirty Feedback Days from current date All feedback Revenue issued for Refreshment Passed as parameter Iterate the collection of elements to control the bean Visits Recuperto the BeanVisitaPR ... Do not know what does ... Exception in database operations Unexpected exceptions due to other factors Return the list of results that should contain counters Comments Issued in the last 30 days Method that allows you to change the comment issued for a Refreshment Check the validity of past data Revenue from the database the bean and stores saved In order to verify that the vote has not changed Which had been previously released Exception running the operation on Database Unexpected exception caused by other factors If the vote was amended returns an exception If the vote has not been amended shall save the new Comment in the database using the specific method of the bean Exception running the operation on Database Unexpected exception caused by other factors Object for the database connection Connect to the Database Method that returns all tags ArrayList to fill with the tags to return Retrieve data from Database Get the information from the Database Exception in the execution of database operations Unexpected exceptions caused by other factors Check the data back in order not to return null values CallerPrivate IDBTurista profiloTurista  Data Management for touristsPrivate IDBPreferenzeGeneriche prefGenTurista  preferences, general manager of the touristPrivate IDBPreferenzeDiRicerca prefRicTurista,  Handle search preferences of touristsPrivate IDBVisitaBC visitatiBC  Managing cultural VisitedPrivate IDBVisitaPR visitatiPR  Manager catering outlets visitedPrivate IDBBeneCulturale beneCulturale  Managing cultural heritage (we need only obtain a bean BeneCulturale x from its IDPrivate IDBPuntoDiRistoro puntoDiRistoro  Management refreshment areas (use the same object "beneCulturale"delete = false;  Find the anniversary with the id We leave the interested Cycle If the data layer is thrown an exception SQLException It throws RemoteException the remote exceptionreturn null;  The cancellation occurred If the data layer is thrown an exception SQLException It throws RemoteException the remote exception( If the data control is positivereturn false;  Data error If the data layer is thrown an exception SQLException It throws RemoteException the remote exception( If the data control is positivereturn false;  Data error If the data layer is thrown an exception SQLException It throws RemoteException the remote exception Check if the username entered is already present in DB If there is no choice all'username Tourist Offices( If the data control is positivereturn false;  Data errorreturn false;  Username already exists in DB If the data layer is thrown an exception SQLException It throws RemoteException the remote exception( If the data control is positivereturn false;  Data error If the data layer is thrown an exception SQLException It throws RemoteException the remote exception Array containing the list of search preferences tourists ID = pIdTurista/  Convert ArrayList (return type of method "ottieniPreferenzeDiRicerca") to simple array /   End Conversion If the data layer is thrown an exception SQLException It throws RemoteException the remote exception If the data layer is thrown an exception SQLException It throws RemoteException the remote exception Boolean variable that will hold true if the bean is correct, false otherwise( If the data control is positivereturn false;  Data error If the data layer is thrown an exception SQLException It throws RemoteException the remote exception Array containing the list of catering outlets visited by tourists with id "pIdTurista" List of cultural favorites of tourists cn id = "pIdTurista" Convert ArrayList a simple arrayint k = 0,  Cycle counter Fill the array with the favorite bean of all cultural favorites from the tourist List of places for refreshment favorite tourist cn id = "pIdTurista" Convert ArrayList a simple arrayint k = 0,  Cycle counter Fill the array with the favorite bean of all cultural favorites from the tourist Instantiate objects for database connections Exception on the database connection Method for obtaining all tourists alike present In the database Object that will contain the return value Retrieve data Invoke the method with empty string to get all Tourists Exception in database operations If the data layer is thrown an exception SQLException It throws RemoteException the remote exception Unexpected exception caused by other factors Return the result from the data layer ottenuro Method that allows to obtain all the tourists who have an account Active or not ArrayList containing the results Retrieve data All tourists are taken to the state as a parameter Exception in implementing the operation on the database If the data layer sends an exception is throws the exception remote Unexpected exceptions caused by other factors Check the data to return, so you do not return null values Method that allows the activation of a tourist is not yet activated Check the validity of input data Bean that contains the data of tourists to activate Retrieve and edit data required Get the data from the Database Check that the tourist is not already activated It sets the value indicating the activation status to true You try to change the database If the edit operation is successful returns True Exception in the execution of database operations If the data layer sends an exception is throws the exception remote Unexpected exceptions caused by other factors If no exceptions were thrown but the changes Not have been successful returns false Method that allows you to disable a tourist Check the validity of dataBeanTurista toChange  bean that contains the data from the tourist Disable Retrieve and edit data required Get the data from the database Check that the tourist is active It sets the value indicating the activation status to false You try to change the database If the edit operation is successful returns True Exception in the execution of database operations If the data layer sends an exception is throws the exception remote Unexpected exceptions caused by other factors If no exceptions were thrown but the changes Not have been successful returns false Method that erases a tourist from the Database Check the validity of data If the cancellation is successful it returns true If the data layer sends an exception is throws the exception remote Unexpected exception caused by other factors Otherwise if you have not thrown exceptions, but the cancellation Not have been successful returns false Method that returns an ArrayList containing the feedback issued by Some for the Cultural Tourist Check the validity of data ArrayList return Retrieve data from Database If the data layer sends an exception is throws the exception remote Unexpected exception caused by other factors Check the data back in order not to return null values Method that returns an ArrayList containing the feedback issued by Some for the Cultural Tourist Check the validity of dataArrayList <BeanVisitaPR> toReturn  variable return Insert the result in toReturn Returned from the Data Layer If the data layer sends an exception is throws the exception remote Unexpected exceptions caused by other factors Check the array of return, so you do not return null values Returns a list of banners for a refreshment point, if the id of Refreshment and 'equal to -1 will' return the complete list Banners  Param Id pIdPuntoDiRistoro of refreshment point from which to obtain the list Banner  Return list of banners linked to Refreshment  Throws SQLException Advanced Search. Returns the list of cultural goods which have in Name or description given string as input, sorted according to Preferences of tourists and filtered according to the tag and the maximum distance. The Returned list contains the number of goods given as input. To scroll The actual list, which may contain multiple 'items, you Use paramtro numPagina.  Param ID pIdTurista tourists who carried out the researchPKeyword   param string that contains the keyword to search the Name or description of the cultural  Param pTags list of tags used to filter the search. the Maximum number of tags to be included should not exceed five Units'. If you exceed this number the other tags Excess will be ignored.  Param pNumPagina The page number you want to view. O for 1 page (the first 10 results), 1 for 2 page (s Results from 11 to 20) etc ...  Param pPosizione position of the person who carried out the research  Param pDistanzaMassima Maximum distance from the user to search for good  Param pNumeroElementiPerPagina number of items to return per page  Throws SQLException  Return list contained ten cultural Returns a list of all cultural  Throws SQLException  Return List of all cultural Returns a list of all the PR that have a Convention active  Return list of all the PR with the Convention active  Throws SQLException Returns a list of the menu of a refreshment  Param pIdPuntoDiRistoro point identification Refreshment  Throws SQLException  Return List of menus Returns the active news  Throws SQLException  Return list of active news Returns a list of dishes on a menu  Param ID pIdMenu menu  Throws SQLException  Return list of dishes in the menu Returns a list of all search preferences in the DB  Throws SQLException  Return List of search preferences in the DB Advanced Search. Returns the list of eateries that have in Name or description given string as input, sorted according to Preferences of tourists, the tags and filtered according to the distance Max. The list returned contains only the number of catering outlets input data. To scroll the real list, which may contain multiple 'items, you Use paramtro numPagina.  Param Id pIdTurista tourists who carried out the researchPKeyword   param string that contains the keyword to search the Name or description of refreshment  Param pTags list of tags used to filter the search. the Maximum number of tags to be included should not exceed five Units'. If you exceed this number the other tags Excess will be ignored.  Param pNumeroPagina The page number you want to view. O The 1 page (the first 10 results), 1 for 2 page (s Results from 11 to 20) etc ...   Param pPosizione position of the person who carried out the research  Param int Number of elements to return pNumeroElementiPerPagina  Param pDistanzaMassima Maximum distance from the user to refreshment To seek  Throws SQLException  Return list containing ten points Refreshments Research. Returns the list of eateries that have the name or Description given string as input, filtered and tags According to the maximum distance. The returned list contains the number of Points Refreshments input data. To scroll the real list, which May contain more 'items, you use the paramtro NumPagina.PKeyword   param string that contains the keyword to search the Name or description of refreshment  Param pTags list of tags used to filter the search. the Maximum number of tags to be included should not exceed five Units'. If you exceed this number the other tags Excess will be ignored.  Param pNumeroPagina The page number you want to view. O The 1 page (the first 10 results), 1 for 2 page (s Results from 11 to 20) etc ...   Param pPosizione position of the person who carried out the research  Param pDistanzaMassima Maximum distance from the user to refreshment  Param int Number of elements to return pNumeroElementiPerPagina  Throws SQLException  Return list containing ten points Refreshments Returns a list of all the refreshment  Throws SQLException  Return list of all the refreshment Returns the list of tags in the database  Throws SQLException  Return List containing the tags Returns the list of tags of a cultural  Param ID pIdBeneCulturale of Cultural Heritage  Throws SQLException  Return list of tags Returns a list of tags of a refreshment  Param pIdPuntoDiRistoro point identification Refreshments  Throws SQLException  Return list of tags Returns the list of cultural favorites from a particular Tourist  Param ID pIdTurista tourists to find  Return List of Cultural Heritage Favorites  Throws SQLException Returns a list of favorite resting spot by a particular Tourist  Param ID pIdTurista tourists to find  Return List of Refreshment Favorites  Throws SQLException Extract the list of visits to a cultural  Param pIdBeneCulturale ID of the cultural  Throws SQLException  Return list of visits of the cultural Extract the list of cultural visited by a tourist  Param ID pIdTurista tourists  Throws SQLException  Return ArrayList of all feedback issued by a tourist for a Specified cultural Extract the list of visits to a refreshment  Param pIdPuntoDiRistoro point identification Refreshments  Throws SQLException  Return List of visits Extract the list of visits of a tourist  Param ID pIdTurista tourists  Return List of visits  Throws SQLException   Interface that provides management services dell'advertisement   Operator agency.      Author author    Version 0.1     © 2007 eTour Project - Copyright by DMI SE  SA Lab - University of Salerno   Returns the list of active news.  Return ArrayList of ArrayList News  Throws RemoteException Method for the return of all cultural property in the Database  Return ArrayList all the beans in the database  Throws RemoteException Exception flow Returns the list of tags of a cultural  Param ID pBeneCulturaleID of Cultural Heritage  Return ArrayList of the cultural <BeanTag> tags specified  Throws RemoteException Exception flow Returns for the cultural property specified, an array where each position contains the number of Feedback corresponding to the value of the array more than 'one. The calculation and 'made in the period between 30 days and today.  Param ID pBeneCulturaleID of Cultural Heritage  Return ArrayList <Integer> The statistics of last thirty days  Throws RemoteException Exception flow Method to return all the refreshment of the DataBase  Return ArrayList containing all the beans of the present Refreshments In the DataBase  Throws RemoteException Exception Remote Method to return all the refreshment with convention Active or not  Param Boolean statoConvenzione for the type of eateries by Get (contracted or not)  Return ArrayList containing all the beans of the present Refreshments In the database depending on the status of the Convention  Throws RemoteException Exception Remote Method which returns the tags to some refreshment  Param pPuntoDiRistoroID point identification Refreshment  Return structure containing all BeanTag associated with the point Refreshments passed as parameter  Throws RemoteException Exception Remote Returns for the Refreshment specified, an array where each Location contains the number of ratings corresponding to the value Index of the array more 'one. The calculation and 'made in the period 30 days and today.  Param pPuntoDiRistoroID unique identifier of Refreshment  Return ArrayList containing the counters as explained above  Throws RemoteException Exception Remote Method which returns all the tags stored in the database  Return an ArrayList of BeanTag  Throws RemoteException Exception Remote Method to obtain a collection of Tourists  Return ArrayList of BeanTurista  Throws RemoteException Exception Remote Method to obtain a collection of active tourists or not  Param boolean statoAccount Tourists can choose On whether  Return ArrayList of BeanTurista  Throws RemoteException Exception Remote Method to get all the feedback issued by a tourist for the points Refreshments  Param pIdTurista ID to pick up the tourists in Feedback  Return ArrayList containing all the beans Feedback released  Throws RemoteException Exception Remote Method to get all the feedback issued by a tourist for Heritage Cultural  Param pIdTurista ID to pick up the tourists in Feedback  Return ArrayList containing all the beans Feedback released  Throws RemoteException Exception Remote
inserisciBanner	 (Non-Javadoc)  See unisa.gps.etour.repository.IDBBanner # inserisciBanner (unisa.gps.etour.bean.BeanBanner) Create and insert a new banner, making sure the num. maximum Banner displayed for a refreshment point is Already been reached in this case throws an exception to the calling method.  Param Id pIDPuntoDiRistoro of refreshment  Param pImmagineBanner ImageIcon object containing the banner image  Return Returns true if the insertion has been successful.  Exception RemoteException Performs a check on the image  Create an object that handles the conventions  Load the data of the convention of a refreshment point  Get the number of banners displayed by the Convention Masssimo  Load the list of banners for a refreshment and stores the number  Check that the maximum number of banners is not reached  Create a blank banner  Create a unique file name  Stores the image in the file system  Write failed  Loads the data in the banner  Insert the banner in the database  Has been reached on most of banner inserted num  Add a banner in the database  Param pBanner bean containing the information of the banner  Throws SQLException Inserts a new banner.  Param pBanner Bean contains the data of the banner  Throws RemoteException
modificaBanner	 (Non-Javadoc)  See unisa.gps.etour.repository.IDBBanner # modificaBanner (unisa.gps.etour.bean.BeanBanner) Method to change the image associated with the banner: Delete the old image and stores the new Enjoy the same path as the old image.  Param id pBannerID banner  Param pImmagine ImageIcon object containing the new image of the banner  Return returns true if the operation is successful Performs a check on the image of the banner  Load the icon image  Load the data of the banner  Check the banner on the data uploaded  Rewrite the image file and returns the result of the operation  Modify the contents of the advertisement, and returns the contents before Edit  Param pBanner Bean that contains the new information of the banner  Return True if there 'was a modified false otherwise  Throws SQLException Modify the data of the banner or the image associated.  Param pBanner Bean contains the data of the banner.  Return true if the operation is successful, false otherwise.  Throws RemoteException
ottieniBannerDaID	 (Non-Javadoc)  See unisa.gps.etour.repository.IDBBanner # ottieniBannerDaID (int) Method which returns a banner given its id  Param ID pIdBanner the banner to return  Return Banner found in the database, null if there is' match  Throws SQLException
DBBanner	return new BeanBanner (55, "c:  ProvaBanner.jpg", 3);
DBConnessionePool	   Class that creates the connection to the database using JDBC and   Allows you to query both read and edit the contents of   Database. E 'implemented to provide a pool of connections to   Provide a connection to each thread.      Author Mauro Miranda    Version 0.1 2007 eTour Project - Copyright by SE  SA Lab DMI University   Of Salerno  private final static String urlConnessione = "jdbc: mysql:  localhost / eTour? user = & password = mauro mauro"; Private constructor that initiates the connection to the database  Static initialization block is used to load the driver Memory Method to get the connection to the server.  Return Returns the database connection  Throws SQLException Extract a connection from the free db connection queue If the connection is not valid, a new connection will be Analyzed The free db connection queue is empty, so a new connection will Be created Add the connection to the free db connection queue Create a new db connection using the db properties
cancellaConvenzione	 (Non-Javadoc)  See unisa.gps.etour.repository.IDBConvenzione # cancellaConvenzione (int) Delete an agreement by the database  Param pIdConvenzione ID of the Convention by removing  Return True if been deleted false otherwise  Throws SQLException
inserisciConvenzione	 (Non-Javadoc)  See unisa.gps.etour.repository.IDBConvenzione # inserisciConvenzione (unisa.gps.etour.bean.BeanConvenzione) Add a convention in the database  Param pConvenzione Convention by adding  Throws SQLException
modificaConvenzione	 (Non-Javadoc)  See unisa.gps.etour.repository.IDBConvenzione # modificaConvenzione (unisa.gps.etour.bean.BeanConvenzione) Modify a convention in the database  Param data pConvenzione Convention of the Convention to be updated  Return True if there 'was a modified false otherwise  Throws SQLException
ottieniConvezioneAttiva	 (Non-Javadoc)  See unisa.gps.etour.repository.IDBConvenzione # ottieniConvezioneAttiva (int) Test banners allowed  Test banners not allowed  Returns the Convention active a refreshment  Param pIdPuntoDiRistoro point identification Refreshments  Return Convention Turns  Throws SQLException
DBMenu	   Class that implements the interface Menu      Author Joseph Martone    Version 0.1 2007 eTour Project - Copyright by SE  SA Lab DMI University   Of Salerno  
DBNews	 Static field that stores the number of test 
cancellaNews	 (Non-Javadoc)  See unisa.gps.etour.repository.IDBNews # cancellaNews (int) Method which removes news from the database. Uses the ( Link Boolean unisa.gps.etour.repository.IDBNews # cancellaNews (int))  Param id pNewsID news be erased.  Return true if the cancellation was successful or FALSE otherwise.  Throws RemoteException Check that the ID is valid  Delete a database from news  Param ID pIdNews News to eliminate  Throws SQLException  Return True if and 'have been deleted false otherwise Method which removes from the news system.  Param ID pNewsID news be erased.  Throws RemoteException
inserisciNews	 (Non-Javadoc)  See unisa.gps.etour.repository.IDBNews # inserisciNews (unisa.gps.etour.bean.BeanNews) Insert a new news in the database. Use the method ( link unisa.gps.etour.repository.IDBNews # inserisciNews (BeanNews)) To insert the news and the method ( link unisa.gps.etour.repository.IDBNews # ottieniNews ()) To count the number of news in the system.  Param Pnews bean containing data news.  Return true if the insertion is successful, false if it was Reached the maximum number of news stored or if the insertion fails.  Throws RemoteException Check the data of the news  Check that has not been exceeded the no. Max news presets  Possible inclusion  Insertion is not possible  Add a news database  Param Pnews News to add  Throws SQLException Method that inserts a new news system.  Param Pnews Bean containing data news  Throws RemoteException
modificaNews	 (Non-Javadoc)  See unisa.gps.etour.repository.IDBNews # modificaNews (unisa.gps.etour.bean.BeanNews) Method to change data of a news. Use the method ( link unisa.gps.etour.repository.IDBNews # modificaNews (BeanNews)).  Param Pnews bean containing the data of news changed.  Return true if the change goes through.  Throws RemoteException Check the data of the news  Modify a news database  Param Pnews News to change with the new data  Throws SQLException  Return True if there 'was a modified false otherwise Method amending the text of a news.  Param Pnews Bean containing data news  Throws RemoteException
setNUM_TEST	 Set the number of tests in progress  Param num_test
DBOperatoreAgenzia	   Class that implements the Agency's Operator      Author Joseph Martone    Version 0.1     © 2007 eTour Project - Copyright by DMI SE  SA Lab - University of Salerno   Connect to database Statement for running queries Resut set where the output of the query is inserted Try block which performs the query and the database connection You get the database connection from the pool Create the statement Query Build the bean when the query returns a Value Otherwise will return null Finally block that contains the instructions to close the connections Hyenas run in any case This closes the result set only if and 'the query was made This closes the if statement and 'opened It returns the connection to the pool if and 'opened Connect to database Statement for running queries Try block which performs the query and the database connection You get the database connection from the pool Create the statement Query You run the query Finally block that contains the instructions to close the connections Hyenas run in any case This closes the if statement and 'opened It returns the connection to the pool if and 'opened
ottieniOperatoreAgenzia	 (Non-Javadoc)  See unisa.gps.etour.repository.IDBOperatoreAgenzia # ottieniOperatoreAgenzia (int) Returns the data Operator Agency with ID equal to that given in Input  Param pUsername Username dell'OperatoreAgenzia to find  Return OperatoreAGenzia with id equal to the input, null if there is  Throws SQLException
modificaPassword	 (Non-Javadoc)  See unisa.gps.etour.repository.IDBOperatoreAgenzia # modificaPassword (java.lang.String) Returns the data Operator Agency with ID equal to that given in Input  Param pUsername Username dell'OperatoreAgenzia to find  Return OperatoreAGenzia with id equal to the input, null if there is  Throws SQLException
DBOperatorePuntoDiRistoro	   Class that implements the interface Operator Refreshment      Author Joseph Martone    Version 0.1 2007 eTour Project - Copyright by SE  SA Lab DMI University   Of Salerno   Empty constructor Variables for database connection Variable for the query Get connection Create the Statement Query cancellation You run the query Cancellation This returns the backup Always runs and takes care of closing the Statement and the Connect Variables for database connection Variable for the query Variable for the query results Get the connection Create the Statement Query for the insertion Query for checking the ID of the PuntoDiRistoro as The association is 1 to 1 between OPPR and PR Execute the query to control Check if there are tuples If it is empty You run the insert query This returns the backup If not already exist Always runs and takes care of closing the Statement and the Connect Variables for database connection Variable for the query Get the connection Create the Statement Query for amendment You run the query for Change This returns the backup Always runs and takes care of closing the Statement and the Connect Variables for database connection Variable for the query Variable for the query results Get the connection Create the Statement Query for the extraction of the dot Refreshments required The query is executed Get the bean Operator refreshment passing the id Built on BeanOPR Exception if there is an error Always runs and takes care to close the Result, the Statement And Connection
DBPiatto	   Class that implements the interface plate      Author Joseph Martone    Version 0.1 2007 eTour Project - Copyright by SE  SA Lab DMI University   Of Salerno  
DBPreferenzeDiRicerca	   Class that implements the interface PreferenzeDiRicerca      Author Joseph Martone    Version 0.1 2007 eTour Project - Copyright by SE  SA Lab DMI University   Of Salerno  
DBPreferenzeGeneriche	   Implementing the IDBPreferenzeGeneriche      Author Mauro Miranda    Version 0.1 2007 eTour Project - Copyright by SE  SA Lab DMI University   Of Salerno   Constructor without parameters Connect to database Statement for running queries Try block which performs the query and the database connection You get the database connection from the pool Create the statement Query You run the query Finally block that contains the instructions to close the connections Hyenas run in any case This closes the if statement and 'opened It returns the connection to the pool if and 'opened Connect to database Statement for running queries Try block which performs the query and the database connection You get the database connection from the pool Create the statement Query You run the query Finally block that contains the instructions to close the connections Hyenas run in any case This closes the if statement and 'opened It returns the connection to the pool if and 'opened Connect to database Statement for running queries Try block which performs the query and the database connection You get the database connection from the pool Create the statement Query You run the query Finally block that contains the instructions to close the connections Hyenas run in any case This closes the if statement and 'opened It returns the connection to the pool if and 'opened Connect to database Statement for running queries Resut set where the output of the query is inserted Try block which performs the query and the database connection You get the database connection from the pool Create the statement Query Run the query Check that the query returns at least one result Finally block that contains the instructions to close the connections Hyenas run in any case This closes the result set only if and 'the query was made This closes the if statement and 'opened It returns the connection to the pool if and 'opened
DBPuntoDiRistoro	   Class that implements the interface of Refreshment      Author Joseph Martone    Version 0.1 2007 eTour Project - Copyright by SE  SA Lab DMI University   Of Salerno   Empty constructor Variables for database connection Variable for the query Get the connection Create the Statement Query cancellation You run the query Cancellation This returns the backup Always runs and takes care of closing the Statement and the Connect Create the organization of the Opening and Closing Variables for database connection Variable for the query Get the connection Create the Statement Query for the insertion of a refreshment You run the insert query Is always done and takes care of closing the statement, and Connect Create the organization of the Opening and Closing Variables for database connection Variable for the query Get the connection Create the Statement Query for amendment You run the query for Change This returns the backup Is always done and takes care of closing the Statement and the Connect Variables for database connection Variable for the query Variable for the query results Get the connection Create the Statement Query to get the number of pages Query without the control tag Query with tags You run the query It returns the value of count () that contains the number of Tuple Always runs and takes care to close the Result, the Statement And Connection Variables for database connection Variable for the query Variable for the query results Get the connection Create the Statement Query to get the number of pages of advanced Query without the control tag Query with tags You run the query It returns the value of count () that contains the number of Tuple Always runs and takes care to close the Result, the Statement And Connection Variables for database connection Variable for the query Variable for the query results Get the connection Create the Statement Query You run the query We create the objects to be returned This generates the resting spot of bean It returns the refreshment Always runs and takes care to close the Result, the Statement And Connection Variables for database connection Variable for the query Variable for the query results Get the connection Create the Statement Query for search Query without the control tag Query with tags You run the query List that will contain the BeanPuntoDiRistoro We create the objects to be returned Build the refreshment Insert the bean in the list It returns the list Always runs and takes care to close the Result, the Statement And Connection Variables for database connection Variable for the query Variable for the query results Get the connection Create the Statement Query for advanced search Query without tags Query with tags You run the query We create the objects to be returned This creates the cultural Insert the bean in the list It returns the list Always runs and takes care to close the Result, the Statement And Connection Variables for database connection Variable for the query Variable for the query results Get the connection Create the Statement Query for a list of all the refreshment You run the query List that will contain the BeanPuntoDiRistoro We create the objects to be returned Build the refreshment Insert the bean in the list It returns the list Always runs and takes care to close the Result, the Statement And Connection
DBStatisticheLocalita	   Class that implements the local statistical      Author Joseph Martone    Version 0.1 © 2007 eTour Project - Copyright by DMI SE  SA Lab --   University of Salerno  
DBVisitaPR	   Class that implements the interface IDBVisitaPR      Author Joseph Martone    Version 0.1 2007 eTour Project - Copyright by SE  SA Lab DMI University   Of Salerno  
DeskManager	   Class for handling custom internal frame inserted in a   JDesktopPane.      Version 0.1    Author Mario Gallo     © 2007 eTour Project - Copyright by DMI SE  SA Lab --   University of Salerno   Default Constructor. Displays a popup menu with options for frames of a desktop bread The selected location.  Param java.awt.Point Pointe - the point where to place the menu.  Param javax.swing.JDesktopPane desk - a JDesktopPane which &grave; an associated Instance of DeskManager.  Throws IllegalArgumentException - &grave; was provided as a parameter JDesktopPane that &grave; not associated with a Desk Manager. Minimize all frames of a JDesktopPane provided in &grave; an associated DeskManager.  Param JDesktopPane Desk - a desktop pane.  Throws IllegalArgumentException - &grave; was provided as a parameter JDesktopPane that &grave; not associated with a Desk Manager. Close all frames in a given JDesktopPane.  Param javax.swing.JDesktopPane Desk - a desktop &grave; bread in an associated DeskManager.  Throws IllegalArgumentException - &grave; was provided as a parameter JDesktopPane that &grave; not associated with a Desk Manager.
dragFrame	 Manages the movement of JInternalFrame inside the area of JDesktopPane, preventing the frames are brought out of the visible area.  Param javax.swing.JComponent AComponent - the component of which Manage the move.  Param int x - x cordinate the point where it was moved Component.  Param int y - y cordinate the point where it was moved Component.
iconifyFrame	 Customize the action of reducing the JInternalFrame an icon, creating Clickable bars on the bottom of JDesktopPane.  Param JInternalFrame frame - a frame inside a JDesktopPane. Restore the frame from the effect of minimizing, resetting the Position and size it had before.  Param javax.swing.JInternalFrame frame - a frame inside a JDesktopPane.
activateFrame	 Return the focus to a selected frame, and, if the frame Is iconificato, the deiconifica.  Param JInternalFrame frame - a frame within a JDesktopPane
centerFrame	 Center the frame supplied as a parameter in JDesktopPane.  Param javax.swing.JInternalFrame frame - a frame inside a JDesktopPane.  Return void
repaintIconifiedFrames	 Redraw the frames in the desktop iconificati bread provided.  Param javax.swing.JDesktopPane Desk - a desktop bread associated with a Desk manager.  Throws IllegalArgumentException - was supplied as a parameter JDesktopPane which is not associated with a Desk Manager.
repaintAllFrames	 Redraw (and resize if necessary) all the frames contained in a Since JDesktopPane.  Param javax.swing.JDesktopPane Desk - a desktop pane.  Throws IllegalArgumentException - if the desktop bread supply is not Associated with a desktop manager like DeskManager.
JInternalFrame	 Open a frame of the class specified using the display Waterfall. If you already have a frame of classes given, the frame is Activated.  Param class class - a class type that extends JInternalFrame.  Param javax.swing.JDesktopPane Desk - a desktop pane.  Throws IllegalArgumentException - The class provided is not a JInternalFrame. Deiconifica all frames previously iconificati.
ElencoCategorie	 The constructor initializes the two hash tables that contain Categories and terms of all categories
getMaxDist	 Access method attribute maxDist  Return the maximum distance of all the terms in all categories
getTermine	 Method of accessing the values of a particular term in this Category table  Param pTermine  Return Returns the values associated with the term pTermine
addCategoria	 Method which allows you to add a category to the table of Categories  Param pNomeCategoria category name to add  Param object associated pCategoria category  Return true if the operation was successfully carried out false Otherwise
setCategoria	 Edit a category of the category table  Param pNomeCategoria category name to edit  Param object pCategoria be associated with this category  Return true if the operation was successfully carried out false Otherwise
setTermine	 Method which allows you to set the value of a term in the tables Total time  Param name pTermine term  Param pVal value to associate with the term
setMaxDist	 Method which allows the value of the seven kings of the maximum distance of Terms from one category  Param pMaxDist
Categories	 Method which allows to derive a collection of names of iterable All categories in the categories tabela  Return string iterable Collection
FeedBackTableModel	﻿   FeedbackTableModel.java     1.0     21/05/2007     2007 eTour Project - Copyright by SE  SA Lab - DMI University of Salerno     <b> FeedbackTableModel </ b>   <p> 'Container model of data for feedback received   To be a cultural or a refreshment. </ P>      See javax.swing.table.AbstractTableModel    See unisa.gps.etour.bean.BeanVisitaBC    See unisa.gps.etour.bean.BeanVisitaPR    Version 1.0    Author Mario Gallo     Default Constructor. We only provide the model but not Loads no data in it. Constructor that takes as input an ArrayList of BeanVisitaBC or BeanVisitaPR and copies of the data within the model Preparing for display.  Param PVIS java.util.ArrayList - the ArrayList of bean.
getColumnCount	 Returns the number of columns provided by the model.  Return int - the number of columns. Returns the class of objects in the column of which is provided in the index.  Param pColumn - the column number.  Return Class - the class of objects of the selected column.  Exception IllegalArgumentException - if the index column does not pro In the model. Returns the number of columns Returns the number of columns provided by the model.  Return int - the number of columns. Returns the class of objects in the column of which is provided in the index.  Param pColumn - the column number.  Return Class - the class of objects of the selected column.  Exception IllegalArgumentException - if the index column does not pro In the model.
GetRowCount	 Returns the number of rows currently in the model.  Return int - the number of rows. Returns whether the selected cell editable.  Return boolean - true if the cell editable False otherwise  Param pRow - the line number.  Param pColumn - the column number.  Exception IllegalArgumentException - if the index or the row or column are not provided In the model. The method is inherited by setValueAt TableModel does not need to SitoTableModel Because it provided the possibility to change a single cell.  Deprecated Enter data on the feedback received from a cultural In the model from Bean.  Param BeanVisitaBC PBC - the bean that contains the feedback from Cultural.  Throws IllegalArgumentException - if the parameters supplied input not Are valid. Enter data on the feedback received from a refreshment In the model from Bean.  Param BeanVisitaPR PBC - the bean that contains the feedback from Refreshment.  Throws IllegalArgumentException - if the parameters supplied input not Are valid. Updates the comment feedback contained in the table row selected.PNuovoCommento   param String - the new comment.  Param pRow - the row to update.  Throws IllegalArgumentException - if <ul> <li> the row index is not present in the model. <li> New comment supplied input is zero. </ Ul> Returns the id of the row receive feedback provided on input.  Param pRow int - the row number.  Return int [] - the id of the feedback.  Throws IllegalArgumentException - if the row index does not pro In the model. Returns the number of rows Returns the number of rows currently in the model.  Return int - the number of rows. Enter data for a tourist in the model since its Bean.  Param pTurista BeanTurisa - the bean that contains the data of the tourist. Update the information of the tourist in the model (if any) With the bean supplied input.  Param pTurista BeanTurista - the bean that contains the data of the tourist. Returns the id of the visitor whose data are displayed in row Provided input.  Param pRow - the line number.  Return - the id of the tourist.  Exception IllegalArgumentException - if the row index does not pro In the model.
getColumnName	 Returns the column name from the index provided.  Return String - the name of the column.  Exception IllegalArgumentException - if the column index is not provided In the model. Returns the column heading i_esima  Param pCol Returns the column name from the index provided.  Return String - the name of the column.  Exception IllegalArgumentException - if the column index is not provided In the model.
getValueAt	 Returns the object in the model to the row and column provided.  Param pRow - the line number.  Param pColumn - the column number.  Return Object - the object contained in the selected cell.  Exception IllegalArgumentException - if the index or the row or column not provided Are present in the model. Returns the coordinates given by the pair of row, column  Param pCol  Param pRow Returns the object in the model to the row and column provided.  Param pRow - the line number.  Param pColumn - the column number.  Return Object - the object contained in the selected cell.  Exception IllegalArgumentException - if the index or the row or column not provided Are present in the model. Returns whether the selected cell editable.  Return boolean - true if the cell editable False otherwise  Param pRow - the line number.  Param pColumn - the column number.  Exception IllegalArgumentException - if the index or the row or column are not provided In the model. The method is inherited by the TableModel not setValueAt Necessary because not provided for the possibility of amending a Single cell.  Deprecated Enables or disables the tourist in the selected row.  Param int pRow - the selected row.  Return int - the id of the tourist on / off. Determines if a visitor to the selected row is enabled or disabled.  Param int pRow - the selected row.  Return <ul> <li> <i> true </ i> - enabled </ li> <li> <i> False </ i> - disabled </ li> </ ul>
Fuzzy	 Class that implements the methods used to calculate the Fuzzy Category of membership of a refreshment or a cultural property. The first variable tracks the frequency of a term Relating to a category The second keeps track of fraquenza a deadline for all Categoriesif (pCategoria.esisteTermine (pTermine))  if the term is In category Its frequency in this category is equal to the frequency KnowledgeBase More frequency in the search text Otherwise it is equal to the frequency of the term in the text Analyzedif (pTotTermini.get (pTermine)! = null)  if the term exists in Table of the total timefrequenzaTotale = pTotTermini.get (pTermine)  Get the valuefrequenzaTotale [0] + = frequenzaTesto,  the total frequency is given Frequency in the text Analizzatp Plus any frequency stored in memory in the table Total time Equal to Frequency in Category The total frequency Fratto Return Math.min (a, b); Return a  b; Return Math.max (0, a + b-1); Return Math.max (a, b); Return (a + b-(a  b)); Return Math.min (1.1 + b);float sum = 0,  return value Table Sum of the values given by the division of function T-Norm With the function S-Norm made Between relevance and belonging Table of terms associated with the text portion. Will contain Values of frequency, rilevamza, membership for each term Table of categories, each category will contain the value of Similarity and belonging TextreplaceAndLower text = (text)  delete characters and spaeciali Returns the text by replacing Uppercase with lowercase( For each end of the textfloat [] toPut = new float [3],  value to assign to the string In the hash tablefloat [] valTmp  temporary variable containing the values Associated with the string if it already exists in the hash table If the string is present in the table picks up the values And an increase in saving them in to put Otherwise initialize the new string with frequency = 1if (testoSplit [i]. length () <= 3)  delete undefined terms As important, the inter ...if (exists (testoSplit [i], datiTesto))  if the time analyzed Is present in tebella the terms of the analyzed text We get the value of frequency in the table and there Adds one Otherwise initialize the value of frequency to a Fratto, the total number of terms (relative frequency) Insert the new entry in the table System.out.println (toPut [0]); You try to open the knowledge basecatch (ClassNotFoundException e)  error opening file kb.sbt Is taken from the base of knowledge to the table of total timefloat maxSimilarity = -1,  holds the value of maximum similarity( For all the categories in the knowledge basefloat [] toPut = new float [3],  value to assign to the string In the hash table( For all elements of the table of the terms of the text We get the value of a term Calculate range and bearing We calculate the similarity Once the analysis All the terms in a categoryif (maxSimilarity <toPut [0])  we update the value of maximum If necessary similarity( For each category We get the value of similarity of the text with the category Analyzedtmp [1] = membership (tmp [0], maxSimilarity),  we calculate Membership Text to the similaritytestoCategoria.put (CategoryName, tmp),  save everything in Category tablereturn maxAppartenenza (testoCategoria)  returns the name output Category With the maximum degree of membershipToReturn String = null,  return valuefloat max = -1,  Maximum value of membership( For all categories of the table of categories of text Values are taken of similarity and belonging associated with Category( If the degree of membership affiliation just uploaded Is greater than the previous update data max and toReturnFileInputStream kBaseStream = new FileInputStream (KBase)  creates A stream with the fileObjectInputStream kBaseObj = new ObjectInputStream (kBaseStream),  si Create a stream object with the file Object is extracted and saved in the file returned in outputFile f = new File (path)  file is createdtoReturn = new ObjectOutputStream (fOut),  create the streamString [] elencoCategorie = new String [4]  array contenentei names Of categrie be analyzed Knowledge base Try to create the file ElencoCategorie [3 ]=""; Create a new object of type Category, which will contain all Category data to be analyzed If the inclusion of the category in the table of categories Not successful We throw an exception You try to read from the folder containing the lyrics of a Category 100 sample test Path of the folder categria Try to read the file ith If the file does not exist it continues execution from File i +1 System.out.println ( "Error on file" + path); Read the text file line by line( For each end of the lineif (toIterate [k]. length () <= 3)  remove the effect Undefined terms Relevant If the term is present in the table of terms The class analyzed Its frequency is equal to the value stored in Table plus one fratto the total number of Terms of the text otherwise it is equal to one fratto the total number of words of text save the values calculated in the table of terms of the category analyzed( for each category is preflushed the table of terms all the terms are analyzed in the table of loaded terms is effattuato calculating bearing and distance data is stored in the table of the terms of the class( writing the results of operations on files
relevance	 Method for calculating the relevance of a term.  Param distance: Contains the distance of the term from category Analyzed  Param pMaxDist: Contains distaza maximum of all terms in all Categories.  Return Returns the relevance of the term in the category. Calculation of similarity between a category and a given text input  Param table pTermini worded. It must contain to Pgni term values of importance and belonging situated inVector float  in positions 1 and 2.  Return returns a numeric value that indicates the similarity of a Text with the category on which one has calculated the values ofImportance and belonging 
distance	 Method for calculating the distance between a term and a category  Param pTermine: Contains the period analyzed  Param pTotTermini: Tables of the total frequency of terms.  Param frequenzaTesto: Table of the terms of the text analyzed.  Param pCategoria: Category analyzed.  Return Returns the distance of the term pTermine by category PCategoria Method for calculating the distance of a term from one category. Used for training  Param pTermine period to analyze  Param pCategoria category from which you must calculate the distance  Param table pTotTermini total time  Return Returns the distance of a term from one category Radius of the earth
category	 Implementation of a function T-Norm  Param a first value  Param b the second value  Return returns the value calculated using a function T-Norm Implementation of a function S-Norm  Param a first value  Param b the second value  Return returns the value calculated using a function S-Norm Method for the calculation of membership of a text to a category  Param val indicates the similarity of a text with a category  Param maxSimilarity indicates the maximum similarity found  Return restiuisce a value in the interval [0,1] that indicates the degree of Membership of the text to the category x Method to delete a tense special characters and to bring All uppercase to lowercase  Param string pStr transform  Return restiuisce the text to lowercase characters and no special Method of retrieving the category you belong to a text  Param pDescrizione text to analyzeRestu   return a string indicating the category  Throws RemoteException Method to find the category with which the text has the highest degree of Membership  Param pTestoCategoria table of categories to the textRestiuisce   return a string indicating the name of the category with which The text has the highest degree of membership Method used to check whether a term is presented in table The terms of the text  Param pStr period to analyze  Param pTable tables in terms of the text  Return returns true if the term exists false otherwise Method used to retrieve the knowledge baseRestiuisce   return an object representing the type ElencoCategorie KnowledgeBase  Throws IOException  Throws ClassNotFoundException Method used to create the file. Used in training  Param path string indicating the path in which to create the file  Return returns an ObjectOutputStream to the file created  Throws IOException Method used to create the knowledge base  Throws RemoteException
GestioneAdvertisement	 import unisa.gps.etour.control.GestioneAdvertisement.test.stubs .;   Class that implements the general   Management dell'advertisement.      Author Fabio Palladino    Version 0.1     2007 eTour Project - Copyright by SE  SA Lab DMI University of Salerno   An object that handles operations on the banner  Constructor, instantiates an object of type DBBanner that Contains methods that perform operations on data Entity banner.  Throws RemoteException
cancellaBanner	 Delete a banner and the image associated with the system.  Param id of the banner to remove pBannerID  Throws RemoteException Bean containing the data of the banner  Load the banner and check the data  Remove the image associated with the banner  Clear the whole bean banner  Delete a banner from the database and returns  Param pIdBanner ID BeanBanner  Return True if and 'was deleted false otherwise  Throws SQLException Delete a banner from the system.  Param pBannerID ID banner to be deleted.  Return true if the operation is successful false otherwise.  Throws RemoteException
HashMap	 Returns a list of banners for a refreshment. Use the method ( link) DBBanner.ottieniBanner  Param ID pPuntoDiRistoroID refreshment  Throws RemoteException Create a HashMap that will hold the banner and associated images  Get the list of banners for a refreshment point  For each banner valid list  If the banner is a valid charge in the HashMap with the image file  Create the image file  Create an object ImageIcon from the image file  Add the banner and the image all'HashMap  Implements the method to obtain the list of feedback and their username on a property Cultural specified by Id  See unisa.gps.etour.control.GestioneBeniCulturali.IGestioneBeniCulturaliComune # ottieniFeedbackBeneCulturale (int) Returns a list of Banner of a particular point of comfort.  Param Id pPuntoDiRistoroID of refreshment owner of banner  Return ArrayList containing the list of banner refreshment  Throws RemoteException Returns a list of feedback to the cultural specified  Param ID pBeneCulturaleID of Cultural Heritage  Return HashMap <BeanVisitaBC, String> The feedback of Cultural Heritage  Throws RemoteException Exception flow
GestioneAdvertisementAgenzia	   Implementing the management dell'advertisement   For the operator agency. Contains methods for managing   News.      Author Fabio Palladino    Version 0.1     2007 eTour Project - Copyright by SE  SA Lab DMI University of Salerno   Contains the methods for collecting news in the database  Constructor. Instantiates an object of type ( link unisa.gps.etour.repository.DBNews).  Throws RemoteException
GestioneAdvertisementPuntoDiRistoro	﻿   Class that implements management services dell'advertisement   For the operator eating place.      Author Fabio Palladino    Version 0.1     2007 eTour Project - Copyright by SE  SA Lab DMI University of Salerno   Constructor, call the constructor of the superclass.  Throws RemoteException
GestioneBeniCulturaliAgenzia	   Class management of cultural heritage unique to Agency      Author Michelangelo De Simone    Version 0.1     © 2007 eTour Project - Copyright by DMI SE  SA Lab - University of Salerno   Constructor of class, richicama and initializes the class of common management Implements the method for the elimination of a cultural system.  See unisa.gps.etour.control.GestioneBeniCulturali.IGestioneBeniCulturaliAgenzia # cancellaBeneCulturale (int) Implement the method for the insertion of a new cultural object.  See unisa.gps.etour.control.GestioneBeniCulturali.IGestioneBeniCulturaliAgenzia # inserisciBeneCulturale (unisa.gps.etour.bean.BeanBeneCulturale) Implements the method for obtaining all the cultural assets currently in the system.  See unisa.gps.etour.control.GestioneBeniCulturali.IGestioneBeniCulturaliAgenzia # ottieniBeniCulturali () Implement the method for changing a cultural asset in the system.  See unisa.gps.etour.control.GestioneBeniCulturali.IGestioneBeniCulturaliAgenzia # modificaBeneCulturale (unisa.gps.etour.bean.BeanBeneCulturale) Implements the method for adding a tag to a cultural object.  See unisa.gps.etour.control.GestioneBeniCulturali.IGestioneBeniCulturaliAgenzia # aggiungiTagBeneCulturale (int, int) This segment of code that actually controls the cultural speficiato Have the tag defined. Get all tags to the cultural past for parameter Here we iterate to find the tag that speficiato, if it is you set a sentry In order not to add a tag twice for the same cultural object.
or	 import unisa.gps.etour.repository.DBBeneCulturale; import unisa.gps.etour.repository.DBTurista; import unisa.gps.etour.repository.DBVisitaBC; Stub Connect to DB for Cultural Heritage Connect to DB Tag Connect to DB for the Feedback / Visits Connect to DB for Tourists Class Supercostruttore UnicastRemoteObject We instantiate objects Instantiate the map of the same size as the list of BeanVisitaBC For each visit by adding their username Here we begin to iterate to add to any visit their username This method returns an ArrayList containing 5 elements (0 .. 4). For each index more 'one is the number of equivalent value your feedback Index number more 'one. Even in this case the method is not 'particularly attractive but it does its dirty work Fine. Set all the indices to 0 Calculate the date for the last thirty days Get all visits of a certain cultural Loop looking for the requests / feedback obtained within the last thirty days Please check that the vote has not changed. If the vote is changed to an exception is raised If the vote is not changed we proceed to send the message to the method of Change the layer's database.
GestioneBeniCulturaliComune	   Class management of cultural heritage for operations common to all actors      Author Michelangelo De Simone    Version 0.1     © 2007 eTour Project - Copyright by DMI SE  SA Lab - University of Salerno     Constructor; you instantiate all fields relevant to data management; Fields are initialized for each instance of the class.  Throws RemoteException Exception flow
ottieniBeneCulturale	 Implements the method for obtaining a cultural object by Id  See unisa.gps.etour.control.GestioneBeniCulturali.IGestioneBeniCulturaliComune # ottieniBeneCulturale (int) Returns the cultural object with id as input  Param pId cultural property to be extracted from the database  Throws SQLException  Return cultural property obtained from the database Method to return a particular Cultural Heritage  Param pBeneCulturaleID The identifier of the cultural property to be returned  Return BeanBeneCulturale Contains data required of Cultural Heritage  Throws RemoteException Exception flow
modificaFeedbackBeneCulturale	 Implement the method for changing a feedback on a cultural past Through Id  See unisa.gps.etour.control.GestioneBeniCulturali.IGestioneBeniCulturaliComune # modificaFeedbackBeneCulturale (int, unisa.gps.etour.bean.BeanVisitaBC) Method for updating (or modification) of a feedback for a certain good Cultural. The method has the burden of  Param pBeneCulturaleID The identifier of the cultural change which the feedback  Param pBeanVisitaBC The new feedback to the cultural indicated  Return boolean The result of the operation; true if was successful, false otherwise  Throws RemoteException Exception flow
GestionePuntiDiRistoroAgenzia	   TEST CASE import   Unisa.gps.etour.control.GestionePuntiDiRistoro.test.stub.DBConvenzione;   Import unisa.gps.etour.control.GestionePuntiDiRistoro.test.stub.DBTurista;     Class contentente methods for managing Refreshments by   Operator Agency      Author Joseph Morelli    Version 0.1 © 2007 eTour Project - Copyright by DMI SE  SA Lab --   University of Salerno   Constructor Call the constructor of the inherited class to instantiate Database connections Method that allows the operator to cancel an agency point of Refreshment Passing as parameter the ID of the same Refreshment Check the validity identifier Execute the method that clears the Refreshment from the Database And in case of operation successful return true Exception in operations on database Unexpected exceptions due to other factors If no operations were successful return false end Method that allows the operator to include in the Agency database The new Refreshment with the information contained in the bean Check the validity of the bean as a parameter and if Triggers except remote Calling the method of the class that operates on the database Insert the new Refreshment In the case where the operations were successful end Returns true Exception in database operations Unexpected exceptions due to other factors If the operation is not successful return false Method for obtaining an ArrayList with all the points Bean Refreshments ArrayList to return to the end of the method Get the list of Refreshments through the class Connect to database And save the list itself nell'ArrayList Exception in operations on database Unexpected exceptions due to other factors Check the ArrayList to return so as not to pass null values To the caller Return the ArrayList with all the refreshment Method that allows you to get all the refreshment that have A Convention on or off depending on the parameter passed Array that allows me to store all the refreshment and Which will remove Depending on the parameter passed to the refreshment active or not Array that allows me to store all the refreshment active Using the database connection Instance to connect to the database Connect all proceeds from the refreshment Assets Exception in operations on database Unexpected exceptions due to other factors If you want to get the refreshment active, then return Directly to those passed by the connection to the database Check the contents dell'ArrayList so as not to return Null values to the caller Connect all proceeds from the refreshment then Perform comparisons Exception in operations on database Unexpected exceptions due to other factors Size dell'ArrayList containing all of gourmet Could Change size if you remove some element Variable that allows me to understand whether to remove a Point Refreshments From array that then I must return First loop to loop through all the ArrayList elements of All Refreshments Second loop to loop through all the ArrayList elements Cones just Refreshments active If the catering points in question has the ID equal to one Of those assets, then set this to true If the catering points in question has a Convention active Removes it from those to be returned Return the ArrayList obtained Method that allows you to change the past as a refreshment Parameter Check the validity of the bean as a parameter and if Trigger an exception remote Call the method to change the database connection The Refreshment Return a positive value if the operation was successful End Exception in operations on database Unexpected exceptions due to other factors Return false if the operation is successful you should Method to obtain the Bean a particular point Refreshment whose Identifier is passed as parameter Check the validity identifier Bean to return to the caller Revenue catering points in the issue by connecting to Database Exception in the database opearazioni Unexpected exceptions caused by other factors Check the bean to be returned in order not to return null values To the caller Return the bean of Refreshment Method that allows you to activate a particular convention to a Point Passed as parameter Refreshments Check the validity of parameters passed Check the data further Instantiate the class to connect to the database If the Convention is not yet active, previously provided to Activate it locally and then pass the bean to the database changed Exception in operations on database Unexpected exceptions caused by other factors If the operation is successful you should return false Method that returns a HashMap containing, for Refreshment Passed as a parameter, the feedback associated with it Check the ID passed as a parameter Instantiate the map and the performance of ArrayList that I will use Method Here I take the list of all visits to the PR passed as Parameter Instantiate the map of the same size as the list of BeanVisitaPR Here we begin to iterate on each visit to add its Username Recuperto the BeanVisitaPR Retrieve the tourist who left the comment that I Examining Get the username of the Tourist Put the pair in the map Exception in database operations Unexpected exceptions caused by other factors Check the return parameter so as not to pass null values To the database Method to insert a tag from those of a refreshment Check the validity of past data ArrayList which stores all the tags Boolean variable to check if the Refreshment Holds the tag you want to delete Use the method through the class of database connection Exception in the execution of transactions in database Unexpected exception due to other factors Check if the tag is present cycle currently Between those of Refreshment If the tag is present among those of eateries, then Provides for executing the erase operation Exception in implementing the operation on the database Unexpected exception due to other factors In case something did not come to fruition Return false Method to delete a tag from those of a refreshment The operations are identical to those above, except for Control over the presence of the tag from those of Refreshment Which should give negative results, and the call here is the method of Insert Check that the Refreshment has not already specified tag Calling the method of adding the class via Connect to database Return false if some operation is not successful you should
GestionePuntiDiRistoroComune	   For import junit tests   Unisa.gps.etour.control.GestionePuntiDiRistoro.test.stub.DBPuntoDiRistoro;   Import unisa.gps.etour.control.GestionePuntiDiRistoro.test.stub.DBVisitaPR;     Class that implements the common tasks for the operator of dining and   For the Operator Agency      Author Joseph Morelli    Version 0.1 © 2007 eTour Project - Copyright by DMI SE  SA Lab --   University of Salerno  
ottieniPuntoDiRistoro	 Method which allows to obtain a BeanPuntoDiRistoro through Connect to database Returns data from a point of comfort with the ID given as argument  Param pId point identification Refreshments  Throws SQLException  Return Refreshment Method to return a particular Refreshment  Param pPuntoDiRistoroID to identify the Refreshment from Return  Return Bean contains the data of Refreshment concerned  Throws RemoteException Exception Remote
GestioneTagComune	   For imported text unisa.gps.etour.control.GestioneTag.test.stub.DBTag;     Class that implements the common tasks for the use of tags      Author Joseph Morelli    Version 0.1 2007 eTour Project - Copyright by SE  SA Lab DMI University   Of Salerno  
GestioneTagOperatoreAgenzia	   Class that implements the methods for the functionality of the Operator Agency   Extending the class of common Tag Management      Author Joseph Morelli    Version 0.1 2007 eTour Project - Copyright by SE  SA Lab DMI University   Of Salerno   Invoke the constructor of the superclass for communication with Database Method to delete from database the tag whose ID is passed As parameter Check the valise of past data Make the database operation Exception in the execution of database operations Unexpected exceptions caused by other factors Method that allows the insertion of a new tag as a parameter Check the validity of the Bean and the data contained within Execute the operation on the Database Exception running the operation on Database Unexpected exceptions caused by other factors Method that enables the modification of a tag that is passed as Parameter Check the validity of data Execute the operation on the Database Exception running the operation on Database Unexpected exceptions caused by other factors Method to obtain the tags whose identifier is passed As parameter Check the validity of data Bean to return Execute the operation on the Database Exception running the operation on Database Unexpected exceptions caused by other factors Method that controls all the attributes of a BeanTag Check the ID Check the description Check the name Check that the name does not contain a space
GestioneTuristaClient	   Class on the Management of Tourist Information      Author Federico Leon    Version 0.1 2007 eTour Project - Copyright by SE  SA Lab University of DMI   Salerno  
cancellaPreferenzeDiRicerca	 (Non-Javadoc)  See unisa.gps.etour.control.GestioneUtentiRegistrati.IGestioneTuristaClient # cancellaPreferenzeDiRicerca (int, Int) Method for deleting a Search Preference given its ID and Tourists  Param ID pIdTurista of tourists for whom you want Delete a Search Preferences  Param ID pIdPreferenzaDiRicerca Search Preferences To cancel  Return The preference of search Delete  Throws RemoteException Exception Remote
cancellaPreferenzeGeneriche	 (Non-Javadoc)  See unisa.gps.etour.control.GestioneUtentiRegistrati.IGestioneTuristaClient # cancellaPreferenzeGeneriche (int) Method for the removal of preferences associated with the General Tourist  Param ID pIdTurista of tourists for whom you want Delete the General Preferences  Return Preferences General erased  Throws RemoteException Exception Remote
inserisciPreferenzaDiRicerca	 (Non-Javadoc)  See unisa.gps.etour.control.GestioneUtentiRegistrati.IGestioneTuristaClient # inserisciPreferenzaDiRicerca (int, Unisa.gps.etour.bean.BeanPreferenzaDiRicerca) Add a preference of Search  Param pPreferenza Search Preferences  Throws SQLException Add a preference for a cultural  Param pIdBeneCulturale ID of the cultural  Param pIdPreferenzaDiRicerca ID PreferenzaDiRicerca  Throws SQLException  Param pPreferenza Search Preferences Add a search preference to a tourist  Param Id pIdTurista tourists  Param pIdPreferenzaDiRicerca ID PreferenzeDiRicerca  Throws SQLException  Param pPreferenza Search Preferences Add a preference research to a refreshment  Param pIdPuntoDiRistoro point identification Refreshments  Param pIdPreferenzaDiRicerca ID PreferenzaDiRicerca  Throws SQLException  Param pPreferenza Search Preferences Method to insert a Search Preferences  Param ID pIdTurista of tourists for which you intend Insert a Search Preferences  Param pPreferenzaDiRicerca Search Preferences be included  Return Boolean: True if the insertion is successful, False otherwise  Throws RemoteException
inserisciPreferenzeGeneriche	 (Non-Javadoc)  See unisa.gps.etour.control.GestioneUtentiRegistrati.IGestioneTuristaClient # inserisciPreferenzeGeneriche (unisa.gps.etour.bean.BeanPreferenzeGeneriche) Method for including the General Preferences Tourist  Param pIdTurista Identifier Turista which involve General Preferences  Param pPreferenzeGeneriche General Preferences for inclusion  Return Boolean: True if the insertion is successful, False otherwise  Throws RemoteException Exception Remote
inserisciTurista	 (Non-Javadoc)  See unisa.gps.etour.control.GestioneUtentiRegistrati.IGestioneTuristaClient # inserisciTurista (unisa.gps.etour.bean.BeanTurista) Add a tourist  Param to add pTurista Tourist  Throws SQLException Method for the insertion of a Tourist  Param pTurista container for all data relating to tourism by Insert  Return Boolean: True if the insertion is successful, False otherwise  Throws RemoteException Exception Remote
modificaPreferenzeGeneriche	 (Non-Javadoc)  See unisa.gps.etour.control.GestioneUtentiRegistrati.IGestioneTuristaClient # modificaPreferenzeGeneriche (unisa.gps.etour.bean.BeanPreferenzeGeneriche) Method for changing the Preferences generously given Tourists  Param ID pIdTurista of tourists for whom you want Change the General Preferences  Param pPreferenzeGenericheNuove The Prefereferze General for inclusion  Param pPreferenzeGenericheVecchie Preferences generous to replace  Return Boolean: True if the MADIF successful, False otherwise  Throws RemoteException
ottieniPreferenzeDiRicerca	 (Non-Javadoc)  See unisa.gps.etour.control.GestioneUtentiRegistrati.IGestioneTuristaClient # ottieniPreferenzeDiRicerca (int) Method for extracting the set of Search Preferences given Tourist  Param ID pIdTurista of tourists for whom you want Extract search preferencesTogether   return the search preferences associated with the Tourist information  Throws RemoteException Exception Remote
ottieniPreferenzeGeneriche	 (Non-Javadoc)  See unisa.gps.etour.control.GestioneUtentiRegistrati.IGestioneTuristaClient # ottieniPreferenzeGeneriche (int) Method for the extraction Preferences generously given Tourists  Param pIdTurista Identifier Turista which you want Get the General Preferences  Return Preferences General information relating to tourism  Throws RemoteException Exception Remote
modificaTurista	 (Non-Javadoc)  See unisa.gps.etour.control.GestioneUtentiRegistrati.GestioneTuristaComune # modificaTurista (unisa.gps.etour.bean.BeanTurista) Constructor that richama turn the class constructor UnicastRemoteObject to connect via RMI Instantiate and connect to the database Connect to the Database Exception in the database connection Method that allows you to change the data of a tourist through its Data Check the validity of past data Execution of the amendment If the changes were made returns true Exception in operations on database If the data layer sends an exception is throws the exception remote Unexpected exception caused by other factors If there were no exceptions but the changes are not Returns false were made Method to obtain the bean with data from the Tourist Identified by The parameter passed Check the validity identifierBeanTurista toReturn = null,  variable return Retrieve data Are requested to return the bean layer on the tourist With id equal to pIdTurista Exception in database operations If the data layer sends an exception is throws the exception remote Unexpected exceptions caused by other factors Return the result Modify a tourist  Param to change pTurista Tourist  Throws SQLException  Return True if and 'been changed otherwise false
ottieniBeniCulturaliVisitati	 (Non-Javadoc)  See unisa.gps.etour.control.GestioneUtentiRegistrati.IGestioneTuristaClient # ottieniBeniCulturaliVisitati (int) Method to extract the list references to the Cultural Heritage Visited by a tourist  Param pIdTurista Identifier Turista  Return list of references to the Cultural Heritage Visited  Throws RemoteException Exception Remote
ottieniPuntiDiRistoroVisitati	 (Non-Javadoc)  See unisa.gps.etour.control.GestioneUtentiRegistrati.IGestioneTuristaClient # ottieniPuntiDiRistoroVisitati (int) Method for the extraction of the list when making reference to Refreshments Visited by a tourist  Param pIdTurista Identifier Turista  Return list of references to Refreshments Visited  Throws RemoteException Exception Remote
inserisciBeneCulturaleVisitato	 (Non-Javadoc)  See unisa.gps.etour.control.GestioneUtentiRegistrati.IGestioneTuristaClient # inserisciBeneCulturaleVisitato (unisa.gps.etour.bean.BeanVisitaBC) Method for the insertion of a cultural Visited  Param pVisitaBC package containing all information relating to Visit  Return true if the item is added successfully, false otherwise  Throws RemoteException Exception Remote
inserisciPuntoDiRistoroVisitato	 (Non-Javadoc)  See unisa.gps.etour.control.GestioneUtentiRegistrati.IGestioneTuristaClient # inserisciPuntoDiRistoroVisitato (unisa.gps.etour.bean.BeanVisitaPR) Method for inserting a refreshment Visited  Param pVisitaPR package containing all information relating to Visit  Return true if the item is added successfully, false otherwise  Throws RemoteException Exception Remote
inserisciBeneCulturalePreferito	 (Non-Javadoc)  See unisa.gps.etour.control.GestioneUtentiRegistrati.IGestioneTuristaClient # inserisciBeneCulturalePreferito (int, Int) Attach a cultural tourists preferred  Param ID pIdTurista tourists  Param pIdBeneCulturale ID of the cultural  Throws SQLException Method for the insertion of a cultural object in the list of Favorites  Param pIdTurista Identifier Turista  Param ID pIdBeneCulturale of Cultural Heritage  Return true if the insertion is successful, false otherwise  Throws RemoteException Exception Remote
inserisciPuntoDiRistoroPreferito	 (Non-Javadoc)  See unisa.gps.etour.control.GestioneUtentiRegistrati.IGestioneTuristaClient # inserisciPuntoDiRistoroPreferito (int, Int) Attach a point of catering to the tourist favorite  Param ID pIdTurista tourists  Param pIdPuntoDiRistoro ID of the cultural  Throws SQLException Method for inserting a refreshment to my Favorites  Param pIdTurista Identifier Turista  Param pIdPuntoDiRistoro point identification Refreshment  Return true if the insertion is successful, false otherwise  Throws RemoteException Exception Remote
cancellaBeneCulturalePreferito	 (Non-Javadoc)  See unisa.gps.etour.control.GestioneUtentiRegistrati.IGestioneTuristaClient # cancellaBeneCulturalePreferito (int, Int) Delete a cultural favorite  Param ID pIdTurista tourists  Param pIdBeneCulturale ID of the cultural  Throws SQLException  Return True if and 'been changed otherwise false Method for the cancellation of a cultural object from the list of Favorites  Param pIdTurista Identifier Turista  Param ID pIdBeneCulturale of Cultural Heritage  Return true if the cancellation is successful, false otherwise  Throws RemoteException Exception Remote
cancellaPuntoDiRistoroPreferito	 (Non-Javadoc)  See unisa.gps.etour.control.GestioneUtentiRegistrati.IGestioneTuristaClient # cancellaPuntoDiRistoroPreferito (int, Int) Delete a favorite resting spot  Param ID pIdTurista tourists  Param pIdPuntoDiRistoro ID of the cultural  Throws SQLException  Return True if and 'was deleted false otherwise Method for deleting a refreshment from the list of Favorites  Param pIdTurista Identifier Turista  Param pIdPuntoDiRistoro point identification Refreshment  Return true if the cancellation is successful, false otherwise  Throws RemoteException Exception Remote
ottieniBeniCulturaliPreferiti	 (Non-Javadoc)  See unisa.gps.etour.control.GestioneUtentiRegistrati.IGestioneTuristaClient # ottieniBeniCulturaliPreferiti (int) Method to extract the list of Cultural Heritage Favorites  Param pIdTurista Identifier Turista  Return List of Cultural Heritage Favorites  Throws RemoteException Exception Remote
ottieniPuntiDiRistoroPreferiti	 (Non-Javadoc)  See unisa.gps.etour.control.GestioneUtentiRegistrati.IGestioneTuristaClient # ottieniPuntiDiRistoroPreferiti (int) Method to extract the list of Refreshments  Param pIdTurista Identifier Turista  Return list of eateries Favorites  Throws RemoteException Exception Remote
GestioneTuristaComune	   Class that implements the common tasks for Operators and Tourist Agency   Ie modificaTurista and ottieniTurista      Author Joseph Morelli    Version 0.1 2007 eTour Project - Copyright by SE  SA Lab DMI University   Of Salerno  
GestioneTuristiAgenzia	   Class that implements the interface for managing the side Tourists   Agency and extends UnicastRemoteObject for communication in remote   Provides basic methods for handling and additional methods for returning   Tourists with special characteristics of      Author Joseph Morelli    Version 0.1 2007 eTour Project - Copyright by SE  SA Lab DMI University   Of Salerno  
HelpManager	   This class realizes the mechanism of sensitive help   Context.      Version 0.2    Author Mario Gallo     © 2007 eTour Project - Copyright by DMI SE  SA Lab --   University of Salerno  <p>  The constructor creates a new instance of the class for the Managing the online help files from contentente The guide itself and the component in which it appear. </ P>PPercorso   param String - the path of the help file.  Param pComponent JTextComponent - the component in which to display Driving.  Throws FileNotFoundException - if the help file is not specified Found.
mouseEntered	 This method handles the event when the pointer should Mouse enters the component.  Param pMouseEnteredEvent MouseEvent - The event generated by the mouse. This method handles the event when the pointer should Mouse goes out of a component.  Param pMouseExitedEvent MouseEvent - The event generated by the mouse.
IAutenticazione	   Interface relating to operations performed by the User login and logout   Register      Author Joseph Penna    Version 0.1 2007 eTour Project - Copyright by SE  SA Lab University of DMI   Salerno  
login	 Static constants that identify the type of users who True Method to authenticate a registered user (Turista - Operator Refreshment)Username   param pUserName on a Registered User  Param password for pPassword Registered User  Param type pTipologiaUtente user is authenticated  Return If the data are correct user ID logged in the eventOtherwise -1 
IDBBanner	   Interface for managing the banner on the database      Author Mauro Miranda    Version 0.1 2007 eTour Project - Copyright by SE  SA Lab DMI University   Of Salerno  
IDBBeneCulturale	   Interface for the management of cultural heritage database      Author Mauro Miranda    Version 0.1 2007 eTour Project - Copyright by SE  SA Lab DMI University   Of Salerno  
inserisciBeneCulturale	 Add a cultural heritage, given input  Param pBene Cultural Heritage for inclusion in database  Throws SQLException Method for the insertion of a new cultural  Param pBeneCulturale The raw bean to be included in the database  Return boolean The result of the operation; true if was successful, false otherwise  Throws RemoteException Exception flow
modificaBeneCulturale	 Modify the information in the cultural  Param pBene contains the information to modify the database  Throws SQLException  Return True if there 'was a modified false otherwise Method for updating (or change) the data of a cultural  Param pBeneCulturale The bean with the new information of the cultural  Return boolean The result of the operation; true if was successful, false otherwise  Throws RemoteException Exception flow
cancellaBeneCulturale	 Delete a cultural object from the database  Param ID pIdBene cultural property to delete  Throws SQLException  Return True if and 'was deleted false otherwise Method for the cancellation of a cultural object by id  Param Id pBeneCulturaleID the bean to be deleted  Return boolean The result of the operation; true if was successful, false otherwise  Throws RemoteException Exception flow
search	 Research. Returns the list of cultural property in their name or Description given string as input, filtered according to tags and Maximum distance. The returned list contains the number of goods given as input. To browse the real list, which may contain more 'of Ten elements, you use the paramtro numPagina.PKeyword   param string that contains the keyword to search the Name or description of the cultural  Param pTags list of tags used to filter the search. the Maximum number of tags to be included should not exceed five Units'. If you exceed this number the other tags Excess will be ignored.  Param pNumPagina The page number you want to view. O for 1 page (the first 10 results), 1 for 2 page (s Results from 11 to 20) etc ...  Param pPosizione position of the person who carried out the research  Param pDistanzaMassima Maximum distance from the user to search for good  Param pNumeroElementiPerPagina number of items to return per page  Throws SQLException  Return list contained ten cultural Constants identify the types of site Initialization method for research  Param pIdTurista ID of the tourist. Pass -1 in case of a Guest  Param pParoleChiave Together keyword searchTogether   param pTagsId Search Tags  Param pRaggioMax Maximum distance between the user and the site  Param numeroElementiPerPagina number of items to look for in a Search session  Param pPosizioneUtente detected by the GPS user position  Param type pTipologiaSito site search  Return number of elements emerged from the research. On error Returns -1  Throws RemoteException the remote exception (Non-Javadoc)Unisa.gps.etour.control.GestioneRicerche.IRicerca   see # search (int, java.lang.String, int [], double, int, unisa.gps.etour.util.Punto3D, byte)
ottieniNumeroElementiRicerca	 Method to get the number of elements to search.PKeyword   param string that contains the keyword to search the Name or description of the cultural  Param pTags list of tags used to filter the search. the Maximum number of tags to be included should not exceed five Units'. If you exceed this number the other tags Excess will be ignored.  Param pPosizione position of the person who carried out the research  Param pDistanzaMassima Maximum distance from the user to search for good  Throws SQLException  Return number of pages. Method to get the number of elements to search.  Param identifier pIdTurista tourists who carried out the researchPKeyword   param string that contains the keyword to search the Name or description of the cultural  Param pTags list of tags used to filter the search. the Maximum number of tags to be included should not exceed five Units'. If you exceed this number the other tags Excess will be ignored.  Param pPosizione position of the person who carried out the research  Param pDistanzaMassima Maximum distance from the user to search for good  Throws SQLException  Return number of pages. Method to get you the elements for an advanced search.  See search ()  Param username pUsernameTurista tourists who carried out the researchPKeyword   param string that contains the keyword to search the Name or description of refreshment  Param pTags list of tags used to filter the search. The Maximum number of tags to be included should not exceed five Units'. If you exceed this number the other tags Excess will be ignored.  Param pPosizione position of the person who carried out the research  Param pDistanzaMassima Maximum distance from the user to refreshment To seek  Throws SQLException  Return number of pages. Method for returning the number of elements results from Search  Return number of elements emerged in the research phase. Where no Is initialized the search returns -1 (Non-Javadoc)  See unisa.gps.etour.control.GestioneRicerche.IRicerca # ottieniNumeroElementiRicerca () Method for returning the number of findings from research  Return number of findings from research. On error Returns -1  Throws SQLException Exception Connecting to Database
IDBConvenzione	   Interface for managing the database Business      Author Joseph Martone    Version 0.1 2007 eTour Project - Copyright by SE  SA Lab DMI University   Of Salerno  
ottieniStoricoConvenzione	 Returns the historical conventions of a refreshment  Param idPuntoDiRistoro point identification Refreshments  Return List of conventions of Refreshment given as argument  Throws SQLException
IDBMenu	   Interface for managing the menu in the database      Author Joseph Martone    Version 0.1 2007 eTour Project - Copyright by SE  SA Lab DMI University   Of Salerno  
inserisciMenu	 Adds a menu in the database  Param pMenu menu to add  Throws SQLException
modificaMenu	 Modify a menu in the database  Param pMenu Contains the data to change  Throws SQLException  Return True if there 'was a modified false otherwise
cancellaMenu	 Delete a menu from database  Param ID pIdMenu menu to delete  Throws SQLException  Return True if and 'was deleted false otherwise
ottieniMenuDelGiorno	 Returns the menu of the day of a refreshment  Param pIdPuntoDiRistoro point identification Refreshments  Param pGiorno Day of the week in which the menu Daily  Throws SQLException  Return Day menu de Refreshment
IDBNews	   Interface for the management of news in the Database      Author Mauro Miranda    Version 0.1 2007 eTour Project - Copyright by SE  SA Lab DMI University   Of Salerno  
IDBOperatoreAgenzia	   Interface for managing the database OperatoreAgenzia      Author Joseph Martone    Version 0.1 2007 eTour Project - Copyright by SE  SA Lab DMI University   Of Salerno  
IDBOperatorePuntoDiRistoro	   Interface for the operator to the point of comfort in the database      Author Joseph Martone    Version 0.1 2007 eTour Project - Copyright by SE  SA Lab DMI University   Of Salerno  
inserisciOperatorePuntoDiRistoro	 Adds an operator refreshment  Param popera Additional operating  Throws SQLException
modificaOperatorePuntoDiRistoro	 Modify an operator in the database  Param popera New data Operator  Throws SQLException  Return True if there 'was a modified false otherwise
cancellaOperatorePuntoDiRistoro	 Delete an operator  Param pIdOperatore Operator ID to delete  Throws SQLException  Return True if and 'was deleted false otherwise
ottieniOperatorePuntoDiRistoro	Returns data operator  Param pIdOperatore Operation ID  Throws SQLException  Return Operator refreshment
IDBPiatto	   Interface for the management of food in the database      Author Joseph Martone    Version 0.1 2007 eTour Project - Copyright by SE  SA Lab DMI University   Of Salerno  
inserisciPiatto	 Add a dish  Param pPiatti plate add
modificaPiatto	 Modify the data in a flat in the database  Param pPiatti data plate to be inserted in database  Return True if there 'was a modified false otherwise
cancellaPiatto	 Delete a dish from the database  Param pIdPiatto ID plate eliminre  Throws SQLException  Return True if and 'was deleted false otherwise
IDBPreferenzeDiRicerca	   Interface for managing search preferences in database      Author Joseph Martone    Version 0.1 2007 eTour Project - Copyright by SE  SA Lab DMI University   Of Salerno  
cancellaPreferenzaDiRicerca	 Delete a preference for research  Param pPreferenza preference to eliminate  Throws SQLException  Return True if and 'have been deleted false otherwise Deletes a preference to find a Tourist  Param Id pIdTurista tourists  Param pIdPreferenza Search Preferences  Throws SQLException  Return True if and 'have been deleted false otherwise Deletes a preference for research of a cultural  Param pIdPreferenzaDiRicerca Search Preferences  Param pIdBeneCulturale ID of the cultural  Throws SQLException  Return True if and 'have been deleted false otherwise Deletes a preference to find a resting spot  Param pIdPreferenza Search Preferences  Param pIdPuntoDiistoro point identification Refreshments  Throws SQLException  Return True if and 'have been deleted false otherwise
ottieniPreferenzeDiRicercaDelTurista	 Returns the list of preferences to find a tourist  Param Id pIdTurista tourists  Throws SQLException  Return List Search Preferences
ottieniPreferenzeDiRicercaDelBC	 Returns the list of preferences for research of a cultural  Param pIdBeneCulturale ID of the cultural  Throws SQLException  Return list search preferences.
ottieniPreferenzeDiRicercaDelPR	 Returns the list of preferences to find a resting spot  Param identifier pIdPuntoDiRistoro a refreshment  Throws SQLException  Return list search preferences.
IDBPreferenzeGeneriche	   Interface for handling general preferences in database      Author Mauro Miranda    Version 0.1 2007 eTour Project - Copyright by SE  SA Lab DMI University   Of Salerno  
inserisciPreferenzaGenenerica	 Add a preference General  Param pPreferenza preference to be added  Throws SQLException
modificaPreferenzaGenerica	 Edit a general preference  Param pPreferenza preference to change  Throws SQLException  Return True if and 'been changed otherwise false
cancellaPreferenzaGenerica	 Delete a general preference  Param ID pIdPreferenza preference to delete  Throws SQLException  Return True if and 'have been deleted false otherwise
ottieniPreferenzaGenerica	 Returns the generic preference for tourists  Param Id pIdTurista tourists  Throws SQLException  Return generic preference
IDBPuntoDiRistoro	   Interface for management of eateries in the database      Author Joseph Martone    Version 0.1 2007 eTour Project - Copyright by SE  SA Lab DMI University   Of Salerno  
inserisciPuntoDiRistoro	 Add a refreshment  Param pPuntoDiRistoro Refreshment to add  Throws SQLException Method for inserting a new Refreshment  Param pPuntoDiRistoro containing all the data from the Refreshment Add  Throws RemoteException Exception Remote
modificaPuntoDiRistoro	 Modify a refreshment  Param pPuntoDiRistoro Refreshment to edit  Throws SQLException  Return True if and 'been changed otherwise false Method for updating (or change) the data of a Refreshment  Param pPuntoDiRistoroID for the unique identification of point Refreshments to be amended  Param pPuntoDiRistoroAggiornato containing the new data to be saved  Return Boolean value-true if the operation went successfully, False otherwise  Throws RemoteException Exception Remote
cancellaPuntoDiRistoro	 Delete a refreshment  Param ID pIdPuntoDiRistoro Refreshment to eliminate  Throws SQLException  Return True if and 'have been deleted false otherwise Method for deleting a refreshment bar with ID  Param pIDPuntoDiRistoro for the unique identification of point Refreshments  Throws RemoteException Exception Remote
ottieniNumeroElementiRicercaAvanzata	 Method to get the number of elements to search.  See ricercaAvanzata ()  Param Id pIdTurista tourists who carried out the researchPKeyword   param string that contains the keyword to search the Name or description of refreshment  Param pTags list of tags used to filter the search. the Maximum number of tags to be included should not exceed five Units'. If you exceed this number the other tags Excess will be ignored.   Param pPosizione position of the person who carried out the research  Param pDistanzaMassima Maximum distance from the user to refreshment To seek  Throws SQLException  Return number of pages.
IDBTag	   Interface for managing the database Tag      Author Mauro Miranda    Version 0.1 2007 eTour Project - Copyright by SE  SA Lab DMI University   Of Salerno  
inserisciTag	 Add a tag  Param ptagi Tag to add  Throws SQLException Method to insert a new tag  Param pTagNuovo containing all the data of the new Tag  Return Boolean: true if the operation is successful, false otherwise  Throws RemoteException Exception Remote
modificaTag	 Modify the data in a tag  Param ptagi Tag to modify  Throws SQLException  Return True if and 'been changed otherwise false Method for editing a Tag  Param pTagModificato containing the details of the new Tag  Return Boolean: true if the operation is successful, false otherwise  Throws RemoteException Exception Remote
cancellaTag	 Delete a tag from the database  Param pIdTag ID Tag to be deleted  Throws SQLException  Return True if and 'was deleted false otherwise Delete a tag to a cultural  Param ID pIdBeneCulturale of Cultural Heritage  Param pIdTag ID tag  Throws SQLException  Return True if and 'was deleted false otherwise Delete a tag to a refreshment  Param pIdPuntoDiRistoro ID  Param pIdTag ID tag  Throws SQLException  Return True if and 'was deleted false otherwise Method for the cancellation of an existing tag  Param pTagID to identify the tags in question  Return Boolean: true if the operation is successful, false otherwise  Throws RemoteException Exception Remote
ottieniTag	 Returns a single tag  Param pId ID tag  Throws SQLException  Return Tags Method which returns a tag identified by its ID  Param pTagID to identify a particular tag  Return a BeanTag containing data Tag concerned  Throws RemoteException Exception Remote
aggiungeTagBeneCulturale	 Tag with immovable cultural  Param ID pIdBeneCulturale of Cultural Heritage  Param pIdTag ID tag  Throws SQLException
aggiungeTagPuntoDiRistoro	 Tag to a refreshment  Param pIdPuntoDiRistoro point identification Refreshments  Param pIdTag ID tag  Throws SQLException
IDBTurista	   Interface for the management of tourists in the database      Author Mauro Miranda    Version 0.1 2007 eTour Project - Copyright by SE  SA Lab DMI University   Of Salerno  
delete	 Delete a tourist from the database  Param pIdTurista Identificatie Tourist delete  Throws SQLException  Return True if and 'been changed otherwise false Method for the cancellation of a tourist from the Database  Param pIdTurista Identifier Tourist delete  Return Boolean: true if the operation is successful, false otherwise  Throws RemoteException Exception Remote
ottieniTurista	 Returns the data of the Tourist  Param pUsername Username tourists  Throws SQLException  Return Information about tourist Returns the data of the tourist with ID equal to that given in Input  Param ID pIdTurista tourists to find  Return Tourists with id equal to the input, null if there is  Throws SQLException
ottieniTuristi	 Returns an ArrayList of tourists who have a username like that Given as argument  Param pUsernameTurista Usrername tourists to search  Throws SQLException  Return data for Tourists Returns the list of tourists turned on or off  Param select pact True False those tourists turned off  Return data for Tourists  Throws SQLException
IDBVisitaBC	   Interface for handling feedback on a given asset   Cultural      Author Joseph Martone    Version 0.1 2007 eTour Project - Copyright by SE  SA Lab DMI University   Of Salerno  
inserisciVisitaBC	 Inserts a visit  Param PVIS Visit to insert  Throws SQLException
modificaVisitaBC	 Modify a visit  Param PVIS Visit to edit  Throws SQLException  Return True if and 'been changed otherwise false
ottieniVisitaBC	 Extract a visit by a tourist to a cultural  Param pIdBeneCulturale ID of the cultural  Param ID pIdTurista tourists  Throws SQLException  Return visit
IDBVisitaPR	   Interface for managing feedback related to a specific point   Refreshments      Author Joseph Martone    Version 0.1 2007 eTour Project - Copyright by SE  SA Lab DMI University   Of Salerno  
inserisciVisitaPR	 Add a visit to a refreshment  Param PVIS visit to add  Throws SQLException
modificaVisitaPR	 Modify a visit  Param PVIS Visit to edit  Throws SQLException  Return True if and 'been changed otherwise false
ottieniVisitaPR	 Extract a visit by a tourist at a refreshment  Param pIdPuntoDiRistoro point identification Refreshments  Param ID pIdTurista tourists  Throws SQLException  Return visit
IGestioneAdvertisement	   Interface General Manager of Banner and news.      Author Fabio Palladino    Version 0.1     2007 eTour Project - Copyright by SE  SA Lab DMI University of Salerno  
IGestioneAdvertisementPuntoDiRistoro	﻿   Interface that provides management services dell'advertisement   Operator eating place.      Author Fabio Palladino    Version 0.1     2007 eTour Project - Copyright by SE  SA Lab DMI University of Salerno   Empty interface
IGestioneBeniCulturaliAgenzia	   Interface for operations peculiar cultural heritage by   Operator Agency.      Author Michelangelo De Simone    Version 0.1 © 2007 eTour Project - Copyright by DMI SE  SA Lab --   University of Salerno  
aggiungiTagBeneCulturale	 Method for setting a tag to a certain cultural  Param pBeneCulturaleID The identifier of the cultural object to which to add a tag  Param pTagID The ID tag to add to the cultural indicated  Return boolean The result of the operation; true if was successful, false otherwise  Throws RemoteException Exception flow
rimuoviTagBeneCulturale	 Method for removing a tag from a certain cultural To ensure that 'the operation is successful it is necessary that the cultural property has Actually set the specified tag  Param pBeneCulturaleID The identifier of the cultural object from which to remove the tag  Param pTagID The ID tag to be removed from the cultural indicated  Return boolean The result of the operation; true if was successful, false otherwise  Throws RemoteException Exception flow
IGestioneBeniCulturaliComune	   Interface for operations common to users and operators on Agency   Beniculturali      Author Michelangelo De Simone    Version 0.1     © 2007 eTour Project - Copyright by DMI SE  SA Lab - University of Salerno  
IGestionePuntiDiRistoroAgenzia	   Interface for refreshments on the side of the agency      Author Joseph Morelli    Version 0.1 © 2007 eTour Project - Copyright by DMI SE  SA Lab - University   Of Salerno  
attivaConvenzione	 Method for inserting a new convention for a certain point Refreshments  Param pPuntoDiRistoroID integer that uniquely identifies the point Refreshments  Param pConv Convention that will enable (Parameter ID Refreshment create redundancy but is useful for security Data)  Return boolean for confirmation of operation  Throws RemoteException Exception Remote
ottieniFeedbackPuntoDiRistoro	 Method to get all the feedback associated to a certain point Refreshments  Param pPuntoDiRistoroID unique identifier of the Refreshment To get feedback  Return HashMap containing the bean as the key value of feedback and how The tourist who issued the feedback  Throws RemoteException Exception Remote
inserisciTagPuntoDiRistoro	 Method which allows you to insert a tag to search for a useful point Refreshments  Param pPuntoDiRistoroId unique identifier of Refreshment  Param pTagId unique ID tags to be inserted  Return Boolean value-true if the operation went successfully, False otherwise  Throws RemoteException Exception Remote
cancellaTagPuntoDiRistoro	 Method which allows you to delete a tag to search for a useful point Refreshments  Param pPuntoDiRistoroId unique identifier of Refreshment  Param pTagId unique ID tags to be inserted  Return Boolean value-true if the operation went successfully, False otherwise  Throws RemoteException Exception Remote
IGestionePuntiDiRistoroComune	   Interface for common operations on the refreshment      Author Joseph Morelli    Version 0.1 2007 eTour Project - Copyright by SE  SA Lab DMI University   Of Salerno  
ottieniUltimiCommenti	 Method which returns the last 10 comments made for a Refreshment  Param pPuntoDiRistoroID ID for the point of rest in Question  Return Array of strings containing 10 items  Throws RemoteException Exception Remote
modificaFeedbackPuntoDiRistoro	 Method which allows you to change the comment issued for a Refreshment  Param pPuntoDiRistoroId unique identifier of Refreshment  Param nuovaVisita Bean containing new comment  Return Boolean value-true if the operation went successfully, False otherwise  Throws RemoteException Exception Remote
IGestioneTagComune	   Common interface for managing Tag      Author Joseph Morelli    Version 0.1 2007 eTour Project - Copyright by SE  SA Lab DMI University   Of Salerno  
IGestioneTagOperatoreAgenzia	   Interface for the tag handler by the Operator Agency      Author Joseph Morelli    Version 0.1 2007 eTour Project - Copyright by SE  SA Lab DMI University   Of Salerno  
IGestioneTuristaClient	   Interface on the Management of Tourist Information      Author Joseph Penna, Federico Leon    Version 0.1 2007 eTour Project - Copyright by SE  SA Lab University of DMI   Salerno  
IGestioneTuristiAgenzia	   Interface for handling tourists from the side of the transaction Agency      Author Joseph Morelli    Version 0.1 2007 eTour Project - Copyright by SE  SA Lab DMI University   Of Salerno  
attivaTurista	 Method to activate a registered tourists  Param pIdTurista ID to activate the Tourist  Return Boolean: true if the operation is successful, false otherwise  Throws RemoteException Exception Remote Method to disable an active tourists  Param to disable pIdTurista Identifier Tourist  Return Boolean: true if the operation is successful, false otherwise  Throws RemoteException Exception Remote
IRicerca	   Interface for management of research      Author Joseph Penna    Version 0.1 © 2007 eTour Project - Copyright by DMI SE  SA Lab --   University of Salerno  
ottieniPaginaRisultatiBeneCulturale	 Method for returning the list of emerging from the Cultural Heritage Research, in a given interval  Param pPagina range of items to be included in the results  Return entirety of cultural property related to the range of results Selected search. In case of error returns null  Throws RemoteException Exception Remote (Non-Javadoc)  See unisa.gps.etour.control.GestioneRicerche.IRicerca # ottieniPaginaRisultatiBeneCulturale (int)
ottieniPaginaRisultatiPuntoDiRistoro	 Method to return the list of eateries have emerged from Research related to a specific intevallo  Param pPagina range of items to be included in the results  Return set of points relating to the range of refreshment Selected search results. In case of error returns null  Throws RemoteException Exception Remote (Non-Javadoc)  See unisa.gps.etour.control.GestioneRicerche.IRicerca # ottieniPaginaRisultatiPuntoDiRistoro (int)
ottieniNumeroPagineRicerca	 Method for returning the number of pages appear in results  Return number of pages that have emerged in the research phase. Where no Is initialized the search returns -1 (Non-Javadoc)  See unisa.gps.etour.control.GestioneRicerche.IRicerca # ottieniNumeroPagineRicerca ()
LimitedDocument	 Note: the content is always a newline at the end If the maximum length is greater than or equal to the string, the part. Otherwise add what may
MediaVotiRenderer	   <b> MediaVotiRenderer </ b>   <p>   This class creates a custom renderer for the average ratings of a   Site. </ B>      See javax.swing.table.DefaultTableRenderer;    See javax.swing.table.TableCellRenderer;    Version 1.0    Author Mario Gallo  
getTableCellRendererComponent	 Method that returns the custom component for the Display of the data contained in the cell of a table.  Param pTable JTable - the table.  Param Object pValue - the data.  Param boolean pSelected -- <ul> <li> <i> True </ i> if the selected cell. <li> <i> False </ i> otherwise. </ Ul>  Param boolean pHasFocus -- <ul> <li> <i> True </ i> if the cell has the focus. <li> <i> False </ i> otherwise. </ Ul>  Param int pRow - the line number.  Param int pColumn - the column number.  Return Component - the component that customizes render the cell.  Throws IllegalArgumentException - if the value of the cell can not Be rendered by this renderer. This method returns the display component of the cell identified From the row and column provided input.  Param pTable JTable - the table.  Param pValue Object - the object contained in the selected cell.  Param pIsSelected boolean - true if the object selected. False otherwise.  Param pHasFocus boolean - true if the object has the focus. False otherwise.  Param pRow int - the row index.  Param pColumn int - the index of the column.  Return Component - the component to display Method that returns the custom component for the Display of the data contained in the cell of a table.  Param pTable JTable - the table.  Param Object pValue - the data.  Param boolean pSelected -- <ul> <li> <i> True </ i> if the cell is selected. <li> <i> False </ i> otherwise. </ Ul>  Param boolean pHasFocus -- <ul> <li> <i> True </ i> if the cell has the focus. <li> <i> False </ i> otherwise. </ Ul>  Param int pRow - the line number.  Param int pColumn - the column number.  Return Component - the component that customizes render the cell.  Throws IllegalArgumentException - if the value of the cell can not Be rendered by this renderer.
MessaggiErrore	   Standard error message self-describing      Author Michelangelo De Simone    Version 0.1     © 2007 eTour Project - Copyright by DMI SE  SA Lab - University of Salerno   Occurs when connecting to the DBMS Occurs when you can not perform an operation on the DBMS It occurs in conditions not specified Occurs when there are format errors in a bean Occurs when a data error Occurs when an error occurs on read / write files Occurs when you have reached the maximum number of banners displayed
News	   This class implements the interface for collecting news for the actor   Operator Agency.      Version 1.0    Author Mario Gallo     © 2007 eTour Project - Copyright by DMI SE  SA Lab --   University of Salerno   This is the default constructor. Setting up dell'help manager to manage the news. Setting up objects for remote asset management Cultural. Load data. This method initializes the toolbar to manage the news.  Return javax.swing.JToolBar - the toolbar management news.if (idNews == -1)  In this way I know if she was Edit This method initializes the button to delete a news.  Return javax.swing.JButton - the button for deletion. Construction of the dialog for confirmation Elimination The dialog screen appears If you chose to confirm the deletion This method initializes the form for entering and editing a News.  Return javax.swing.JPanel - the formatif (idNews! = -1)  We're making a change Construction of the dialog for confirmation of Edit The dialog screen appears If you chose to confirm the change We are posting This method initializes the table with all the news these In the system.  Return javax.swing.JTable This method initializes the text area that contains the text of a news.  Return javax.swing.JTextArea - the text area. This method imports the news downloaded from the server in the table. If an error displays an error message. Text of news Priority Date of entry End Date
getJContentPane	 Initialize the content pane of the frame inside.  Return javax.swing.JPanel - the content pane. This method initializes jContentPane  Return javax.swing.JPanel
getBtnModificaN	 This method initializes the button to edit a news.  Return javax.swing.JButton - button to change.
getBtnInsertModify	 This method initializes the slider to set the priority of a News.  Return javax.swing.JSlider - the slider with ticks from 1 to 5. This method initializes the radio button for submission of the form Insert / edit.  Return javax.swing.JButton - the button of submission of the form.
NewsTableModelTest	   Class tests for NewsTableModel      Author Mario Gallo    Version 0.1     © 2007 eTour Project - Copyright by DMI SE  SA Lab - University of Salerno   Put bean in two model test. Verify the data entered.
testCostruttoreConArrayList	 Verify the behavior of the manufacturer with an ArrayList of BeanNews. Verify the manufacturer with an ArrayList Compor zero. Verify the behavior of the manufacturer with an empty ArrayList.
testGetValueAtParametriCorretti	 Verify the behavior of the method with the correct parameters.
testGetValueAtRigaSballata	 Verify Compor the method with an index row fold.
testGetValueAtColonnaSballata	 Verify Compor of the method with a column index busted.
testInsertNewsParametroCorretto	 Verify Compor method with proper parameter.
testInsertNewsParametroNull	 Verify Compor method with parameter to null
testUpdateNewsParametroCorretto	 Verify Compor method with proper parameter.
testUpdateNewsParametroNull	 Verify Compor method with parameter to null
testRemoveNewsParametroCorretto	 Verify Compor method with proper parameter.
testRemoveNewsRigaSballata	 Verify Compor of the method with row index busted.
PrioritaRenderer	﻿   PrioritaRenderer.java     1.0     22/05/2007     2007 eTour Project - Copyright by SE  SA Lab - DMI University of Salerno     <b> PrioritRenderer </ b>  <p>  This class creates a custom renderer JSlider as   Of the priorities in the table of news. </ P>      Version 1.0    See javax.swing.JSlider    See javax.swing.table.TableCellRenderer    Author Mario Gallo     This default constructor.
PRNode	   <b> PRNode </ b>  <p>  This class creates a node in a JTree to store   Information for a refreshment. </ P>      See javax.swing.JTree;    See javax.swing.tree.DefaultMutableTreeNode;    Version 1.0    Author Mario Gallo     Create a node with the name of refreshment and Your id supplied as parameters.PNomePR   param String - the name of refreshment.PID   param int - the id of refreshment.  Throws IllegalArgumentException - if the name provided as input is invalid.
PuntiDiRistoro	 This is the default constructor xxx
initialize	 This method initializes this  Return void  Param pId  Param pNumeroVoti  Param Pnom  Param pCitta  Param pTelefono  Param pDescrizione  Param pLocalita  Param pVia  Param pcap  Param pProvincia  Param pPosizione  Param pOrarioApertura  Param pOrarioChiusura  Param pGiornoChiusura  Param pCostoBiglietto  Param pMediaVoti This method initializes jTextPane  Return javax.swing.JTextPane This method initializes ricercaPanel1  Return javax.swing.JPanel This method initializes btnRicerca2  Return javax.swing.JButton This method initializes btnAzzera2  Return javax.swing.JButton This method initializes nomePR  Return javax.swing.JTextField This method initializes btnAttiva  Return javax.swing.JButton This method initializes this  Return void This method initializes JScrollPane  Return javax.swing.JScrollPane This method initializes tabellas  Return javax.swing.JTable This method initializes jTextPane  Return javax.swing.JTextPane Method called by the constructor  Return void Method to initialize posGeoX The X position of the GPS  Return javax.swing.JTextField Method to initialize posGeoY The Y position of the GPS  Return javax.swing.JTextField Method to initialize posGeoZ The Z position of the GPS  Return javax.swing.JTextField This method initializes the interface card for tourists.  Return void This method initializes this  Return void
getBtnModifica	 This method initializes jJToolBarBar  Return javax.swing.JToolBar This method initializes btnModifica  Return javax.swing.JButton This method initializes jJToolBarBar  Return javax.swing.JToolBar This method initializes btnModifica  Return javax.swing.JButton
getBtnSkeda	 This method initializes btnSkeda  Return javax.swing.JButton
getBtnElimina	 This method initializes btnElimina  Return javax.swing.JButton This method initializes btnElimina  Return javax.swing.JButton This method initializes the delete button for a tourist.  Return javax.swing.JButton - the button.
getJScrollPane	 This method initializes JScrollPane  Return javax.swing.JScrollPane Creation JScrollPane  Return javax.swing.JScrollPane Creating a JScrollPane (jScrollPane2)  Return javax.swing.JScrollPane This method initializes JScrollPane  Return javax.swing.JScrollPane
Punto3D	   Bean that contains the coordinates of a point on the surface of the earth "and   That it realizes the calculation of the distance from the system. The values of   Coordinates must be represented in radians and must fall in   Target range: 0 to greek-Pi / 4 for the latitude south of the equator   0 to + Pi greek / 4 for the latitude north of the equator from 0 to Pi-greek /   2 for the meridian of longitude west of Greenwitch greek from 0 to + Pi / 2   For the meridian of longitude east of Greenwitch      Author Mauro Miranda    Version 0.1 2007 eTour Project - Copyright by SE  SA Lab DMI University   Of Salerno   Calculate the distance between the point and another point given as argument  Param p  Return Method which creates a 3D point from coordinates measured in degrees. The 3D point instead represents the coordinates in radians  Param pLatitudine latitude in degrees  Param pLongitudine Longitude in degrees   Param pAltitudine  Return Punto3D with the coordinates in radians
getLatitudine	 Returns the latitude  Return
setLatitudine	 Sets the latitude  Param pLatitudine
getLongitudine	 Returns the longitude  Return
setLongitudine	 Sets the longitude  Param pLongitudine
getAltitudine	 Returns the altitude  Return
setAltitudine	 Sets the altitude  Param pAltitudine
Punto3DRenderer	   <b> Punto3DRenderer </ b>  <p>  This class creates a custom renderer for   Objects of type Punto3D. </ P>      See javax.swing.table.TableCellRenderer    See unisa.gps.etour.util.Punto3D    Version 1.0    Author Mario Gallo      
reportStatistici	 This is the default constructor xxx
getJComboBox	 This method initializes JToolBar  Return javax.swing.JToolBar This method initializes JComboBox  Return javax.swing.JComboBox
getStat	 This method initializes JTabbedPane  Return javax.swing.JTabbedPane
getJButton	 This method initializes JButton  Return javax.swing.JButton This method initializes jButton1  Return javax.swing.JButton This method initializes jButton2  Return javax.swing.JButton
getBtnVisualizza	 This method initializes btnVisualizza  Return javax.swing.JButton
ReportTableModel	 ReportTableModel.java 1.0 21/05/2007 © 2007 eTour Project - Copyright by SE  SA Lab - DMI - University of Salerno
Search	 Search Parameters Objects for the database connection List of tags obtained Search Results pages for partitioned Quantity of items and pages results in the research phase Reset the parameters of the previous search Start checking the correctness of the search parameters If the parameters are valid, I get the number of results Otherwise returns -1 Check that the type of site is valid and that the page is In the range Transform the list obtained in array Results = ricercaBeniCulturaliPerPagina (pPagina). ToArray ( Results); Check that the type of site is valid and that the page is In the range Transform the list obtained in array Results = ricercaPuntiDiRistoroPerPagina (pPagina). ToArray ( Results); Check the type of site and gets the number of results Declare the list of sites related to the page input Check the type of site If the list has not already been obtained previously Search If the list has not already been obtained previously Search Return the results If the number of pages is greater than or equal to 0 returns the number of Pages If the number of elements is a multiple of the number of items per page Return their relationship Otherwise returns their relationship + 1 If page number is the last return their form Otherwise returns the number of items per page If page number is in the range returns true Clears all the search parameters Initialize the list of Tags If the list of identifiers of the tag is empty I get the tags Loop for the insertion of tags found in the list If the identifier is greater than 0 Check correctness on tags Return the list of tags
ricercaPerPagina	 Method for returning the list of results  Param pNumeroPagina range of results to return  Return Container sites emerged in the research phase as the interval  Throws RemoteException Exception Remote
calcolaNumeroPagineRicerca	 Method for calculating the number of pages found at Search  Return many pages in the research phase
calcolaNumeroElementiPagina	 Method for calculating the number of elements of nell'intevallo A given page  Param interval nPagina results  Return number of elements in a page
controllaPagina	 Method for checking the validity of a page  Param pPagina page to check  Return true if the page is valid
controllaIdTurista	 Method for checking the correctness of the identifier Tourist  Return true if the identifier is valid, false otherwise
azzeraParametri	 Method to reset all the variables related to a search  Return A constant that indicates the correct zero
arrayToArrayListTag	 Method for the detection and conversion of data tags in struttara List  Param list of identifiers pTagsId Search Tags  Return List Search Tags  Throws SQLException
RicercaStandard	   Class for managing Standard Search      Author Joseph Penna    Version 0.1 © 2007 eTour Project - Copyright by DMI SE  SA Lab --   University of Salerno   Constructor of the class Check the type of site and gets the number of results Check the type of site and search
SchedaBC	   Class that models the interface for viewing the card,   Modify the data and the insertion of a new cultural object.      Version 1.0    Author Mario Gallo     © 2007 eTour Project - Copyright by DMI SE  SA Lab --   University of Salerno     The default constructor for inclusion of the interface model A new cultural object. This interface models the manufacturer regarding modification of data and Display of the tab of a cultural object.  Param BeanBeneCulturale pbc - the bean contains the data of Selected cultural.  Param boolean pModifica <ul> <li> true - the fields will be editable, and then you are To amend the data of a cultural object. <li> False - the fields will not be Edit, and then you are viewing the tab of a cultural object. </ Ul> This method initializes the interface for display board A cultural object.  Return void This method initializes the toolbar tab of a cultural object.  Return javax.swing.JToolBar - the toolbar.
models	 Initialize the content pane Dialog closure to close the entry window. Setting up of remote objects for the management of cultural heritage. Load data. Initialize button Initialize instance variablesif (pModifica)  Are we change the cultural property.else  We're viewing the tab of a cultural object. Dialog closed frame Setting up of remote objects for the management of cultural heritage. Load data. If you are an amendment asks for confirmation. Otherwise directly closes the window. Initialize the content pane. Data cultural Statistics Feedback received Load the data of the cultural and statistics. END TEST Construction of the dialog for confirmation of the change The dialog screen appears If you chose to confirm the change Creation Tips Name of Cultural Heritage Address City Location CAP Geographical Location State Description Phone Opening Closed Cost PannelloTag Rating Comment Release Date Username Date (int year, int month, int date, int hrs, int min) If an error panel tag remains blank.
JLabel	 Two exceptions: RemoteException and NotBoundException. The Result is the same. The management is not operable and After the error message window closes. Two exceptions: RemoteException and NotBoundException. The Result is the same. The management is not operable and After the error message window closes.
caricaDatiForm	 This method loads the data supplied to the constructor of the cultural In the form. This method loads the bean data provided tourist camps Of the form.  Return void
caricaStatistiche	 This method loads the statistics provided cultural Input to the constructor of the class.
mostraNascondiSuggerimenti	 This method shows or hides the label next to the suggestions Of the form. This method shows or hides the suggestions relating to the form fields.  Return void
attivaDisattivaEdit	 This method makes the form editable or not. This method makes it or not editable form fields.  Return void
getBtnSalva	 This method initializes btnSalva  Return javax.swing.JButton Method to initialize the Save button (btnSalva)  Return javax.swing.JButton This method initializes the button to save the changes Made to the data of the tourist.  Return javax.swing.JButton
getBtnAnnulla	 This method initializes the button to clear the form (well again Culture) or reload the data of the cultural (change data).  Return javax.swing.JButton - the button above. Method to initialize the Cancel button (btnAnnulla)  Return javax.swing.JButton
getBtnModificaCommento	 This method initializes the button to edit a comment.  Return javax.swing.JButton - the button to edit a comment. Method to initialize the button for Changing a comment (btnModificaCommento)  Return javax.swing.JButton
SchedaPR	   Class that models the interface for viewing the card,   Modify the data and the insertion of a new resting spot.      Author Lello     The default constructor for inclusion of the interface model A new refreshment. This interface models the manufacturer regarding modification of data and Display board a refreshment.  Param unisa.gps.etour.bean.BeanPuntoDiRistoro PR - the bean contains the data of PuntoDiRistoro selected.  Param boolean change - indicates whether the fields should be editable, so if You are viewing a card or change the cultural property. Method for creating a toolbar (ToolbarSchedaPR)  Return javax.swing.JToolBar
minutes	 IndirizzoPR1.addItem ( "Via");indirizzoPR1.addItem (P.zza ");indirizzoPR1.addItem ( "V.le");indirizzoPR1.addItem (V.co ");indirizzoPR1.addItem ( "Largo");indirizzoPR1.addItem ( "Course");
getJTabbedPane	 Create and initialize a JTabbedPane  Return javax.swing.JTabbedPane
getIndirizzoPR	 Initialize a JexField (indirizzoPR)  Return javax.swing.JTextField Method to initialize the type field address (indirizzoPR) Or via, piazza ....  Return javax.swing.JComboBox
getCittaPR	 Initialize a JTextField for entering Uan city CittaPR  Return javax.swing.JTextField
getLocalitaPR	 This method initializes localitaPR  Return javax.swing.JComboBox
getCapPR	 Code of refreshment. Definition capPR JTextField  Return javax.swing.JTextField
JTextArea	 Method to create JTextArea's whole descrizionePR  Return javax.swing.JTextArea
getTelefonoPR	 Method to create the JTextField telefonoPR  Return javax.swing.JTextField
getOrarioAPOrePR	 method to initialize a JComboBox with the hours (orarioAPOrePR)  Return javax.swing.JComboBox
getOrarioApMinPR	 Method to initialize a JComboBox with the minutes (orarioApMinPR)  Return javax.swing.JComboBox
getOrarioCHMinPR	 Method to initialize a JComboBox with the minutes (orarioCHMinPR)  Return javax.swing.JComboBox
getProvPR	 Create and initialize a jCombo Box with all the provinces (provPR)  Return javax.swing.JTextField
insertString	 Initialization and management position  Param integer pOffset  Param String pString  Param Attribute Pattra
getNomePR	 Initialization of a data point of the snack (nomePR)  Return javax.swing.JTextField
tourist	   Class that models the interface for displaying the card and   Modify the data of an account tourist.      Version 1.0    Author Mario Gallo     © 2007 eTour Project - Copyright by DMI SE  SA Lab --   University of Salerno   The only card manufacturer model of a tourist or modification of data From the bean.  Param pParent unisa.gps.etour.gui.operatoreagenzia.Turisti - the window "father."  Param pTurista unisa.gps.etour.bean.BeanTurista - the bean contentente data Of the tourist.  Param boolean pModifica <ul> <li> true - if amendments are made to the Data. <li> False - if you are viewing the card. This method initializes the toolbar for the functionality of the card Tourist.  Return javax.swing.JToolBar This method initializes the button for editing data.  Return javax.swing.JToggleButton
card	 Construction of the dialog for confirmation of the change The dialog screen appears If you chose to confirm the change Creation Tips Name Surname Date of Birth Place of Birth Phone Address City CAP State E-Mail Username Password Data entry
getBtnReimposta	 This method initializes the button to reset the data of the tourist In the form.  Return javax.swing.JButton
ScrollableTable	   Create a custom JTable that can be displayed through   Components that enable scrolling.    See javax.swing.JTable    See javax.swing.Scrollable    Author _OniZuKa_    Version 1.0  
SitoTableModel	   SitoTableModel.java     1.0     21/05/2007     © 2007 eTour Project - Copyright by SE  SA Lab - DMI - University of Salerno     <b> SitoTableModel </ b>   Serves as a data container <p> of cultural or refreshment areas that need   Be displayed in a JTable. </ P>    See javax.swing.table.AbstractTableModel    See javax.swing.JTable    See unisa.gps.etour.bean.BeanBeneCulturale    See unisa.gps.etour.bean.BeanPuntoDiRistoro    Version 1.0    Author Raphael Landi           cells = new Object [pr.length] [3]  First value = second rows = columns         cells = new Object [bc.length] [3]  First value = second rows = columns
Tag	 This is the default constructor xxx)   JVE: decl-index = 0: visual-constraint = "10.10"
getCenterPanel	 This method initializes CenterPanel  Return javax.swing.JPanel
getEastPanel	 This method initializes EastPanel  Return javax.swing.JPanel
getJTable	 This method initializes JTable  Return javax.swing.JTable
getBtnExit	 This method initializes btnExit  Return javax.swing.JButton
getJPanelUp	 This method initializes jPanelUp  Return javax.swing.JPanel
getJPanelHelp	 This method initializes jPanelHelp  Return javax.swing.JPanel
getJTextPane	 This method initializes jTextPane  Return javax.swing.JTextPane
getJTextField	 This method initializes JTextField  Return javax.swing.JTextField
getJTextArea	 This method initializes JTextArea  Return javax.swing.JTextArea
getBtnOk	 This method initializes btnOK  Return javax.swing.JButton
getBtnResetta	 This method initializes btnResetta  Return javax.swing.JButton
TagTableModel	 TAGTableModel.java 1.0 28/05/2007 © 2007 eTour Project - Copyright by SE  SA Lab - DMI - University of Salerno
TAGTableModel	 <p> <B> Title: </ B> TagTableModel </ P> <p> <B> Description: </ B> TableModel for dynamic management of Table Within the section GestioneTag </ P>  Author _Lello_  Version 1.0 Constructor for class TagTableModel  Param BeanTag []
TestoNewsRendererTest	   Test case for class TestoNewsRenderer      Author Mario Gallo    Version 0.1 © 2007 eTour Project - Copyright by DMI SE  SA Lab --   University of Salerno   Test the renderer with a news active. Test the renderer with a news expired.
testGetTableCellRendererParametriCorretti	 Verify the behavior of the method with the correct parameters.
testGetTabelCellRendererNoNewsModel	 Verification Compor the table with a table without NewsTableModel Associated.
testGetTableCellRendererParametroNull	 Verify the behavior of the method with a parameter to null.
testGetTableCellRendererTipoInatteso	 Verify the behavior of the method with a data type unexpected.
Tourists	   This class implements the interface for the management of tourists   Agency by the Operator.      Version 1.0    See javax.swing.JInternalFrame    Author Mario Gallo     This is the default constructor.if (i == 2)  Date of Birthif (enabled)  The process of decommissioningelse  The process of activation TEST TEST TEST TEST TEST END TEST Status Name Surname Email Phone Date of Birth City of Birth Address Residence CAP State Data entry Create Panel, choose tourists Create search panel
getBtnAttiva	 This method initializes the toolbar on the management of Tourists.  Return javax.swing.JToolBar - the toolbar. This method initializes the button to activate A tourist.  Return javax.swing.JButton - the button.
getBtnModificaDati	 This method initializes the button for changing Data of a tourist.  Return javax.swing.JButton - the button.
getBtnVisualizzaScheda	 This method initializes the button to display the Board a tourist.  Return javax.swing.JButton - the button.
getScrollTableTuristi	 This method initializes the scroll with the table bread tourists.  Return javax.swing.JScrollPane - the scroll pane.
TuristiTableModel	﻿   TuristiTableModel.java     1.0     27/05/2007     2007 eTour Project - Copyright by SE  SA Lab - DMI University of Salerno     <b> TuristiTableModel </ b>   <p> Acts as a container of data from the tourists who have   Be displayed in a JTable. </ P>    See javax.swing.table.AbstractTableModel    See javax.swing.JTable    See unisa.gps.etour.bean.BeanTurista    Version 1.0    Author Mario Gallo   Default Constructor. We only provide the template without loading No data in it. Create a model of the table and loads the data provided through an array of BeanBeneCulturale.  Param pTuristi java.util.ArrayList <BeanTurista> - an ArrayList of BeanTurista.if (i! data.size = ())  Found
